{"version":3,"sources":["hooks/useNationalitiesContainer.js","components/NationalitySwitchGroup/NationalitySwitch.js","components/NationalitySwitchGroup/index.js","components/NationalitySwitchGroup/NationalitySwitchGroup.js","pages/SettingsPage/SettingsPage.js","pages/SettingsPage/index.js"],"names":["useNationalitiesContainer","dispatch","useDispatch","nationalities","useSelector","selectNationalities","doToggleNationality","name","toggleNationality","NationalitySwitch","checked","handleChange","label","charAt","toUpperCase","substring","FormControlLabel","control","Switch","onChange","NationalitySwitchGroup","onToggleNationality","event","target","styleHelperText","useMemo","maxWidth","FormControl","component","FormLabel","FormGroup","Object","keys","map","nationalityName","key","FormHelperText","style","useStyles","makeStyles","theme","textWrapper","marginTop","marginBottom","switchesWrapper","margin","spacing","SettingsPage","classes","Grid","container","direction","justify","alignItems","className","item","Typography","variant","color"],"mappings":"0LAgBeA,EAZmB,WAChC,IAAMC,EAAWC,cAQjB,MAAO,CAAEC,cANaC,YAAYC,KAMVC,oBAJI,SAACC,GAC3BN,EAASO,YAAkBD,O,sDCahBE,EAjBW,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,aAAcJ,EAAW,EAAXA,KAC5CK,EAAQL,EAAKM,OAAO,GAAGC,cAAgBP,EAAKQ,UAAU,GAE5D,OACE,kBAACC,EAAA,EAAD,CACEC,QACE,kBAACC,EAAA,EAAD,CACER,QAASA,EACTS,SAAUR,EACVJ,KAAMA,IAGVK,MAAOA,KCfEQ,ECOgB,SAAC,GAA4C,IAA1CjB,EAAyC,EAAzCA,cAAekB,EAA0B,EAA1BA,oBACzCV,EAAe,SAACW,GACpBD,EAAoBC,EAAMC,OAAOhB,OAG7BiB,EAAkBC,mBAAQ,iBAAO,CAAEC,SAAU,OAAQ,IAE3D,OACE,kBAACC,EAAA,EAAD,CAAaC,UAAU,YACrB,kBAACC,EAAA,EAAD,CAAWD,UAAU,UAArB,wBAGA,kBAACE,EAAA,EAAD,KACGC,OAAOC,KAAK7B,GAAe8B,KAAI,SAACC,GAAD,OAC9B,kBAAC,EAAD,CACEC,IAAKD,EACLxB,QAASP,EAAc+B,GACvBvB,aAAcA,EACdJ,KAAM2B,QAIZ,kBAACE,EAAA,EAAD,CACEC,MAAOb,GADT,4ICvBAc,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,YAAa,CACXC,UAAW,GACXC,aAAc,IAEhBC,gBAAiB,CACfC,OAAO,KAAD,OAAOL,EAAMM,QAAQ,GAArB,WAwCKC,EApCM,WACnB,IAAMC,EAAUV,IADS,EAGsBtC,IAAvCG,EAHiB,EAGjBA,cAAeG,EAHE,EAGFA,oBAEvB,OACE,kBAAC2C,EAAA,EAAD,CACEC,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,UAEX,kBAACJ,EAAA,EAAD,CACEK,UAAWN,EAAQP,YACnBc,MAAI,GAEJ,kBAACC,EAAA,EAAD,CACEC,QAAQ,KACRC,MAAM,WAFR,aAOF,kBAACT,EAAA,EAAD,CACEK,UAAWN,EAAQJ,gBACnBW,MAAI,GAEJ,kBAAC,EAAD,CACEpD,cAAeA,EACfkB,oBAAqBf,OC9ChByC","file":"static/js/7.841b66e3.chunk.js","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { selectNationalities, toggleNationality } from '../store/module';\r\n\r\nconst useNationalitiesContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const nationalities = useSelector(selectNationalities);\r\n\r\n  const doToggleNationality = (name) => {\r\n    dispatch(toggleNationality(name));\r\n  };\r\n\r\n  return { nationalities, doToggleNationality }\r\n};\r\n\r\nexport default useNationalitiesContainer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst NationalitySwitch = ({ checked, handleChange, name }) => {\r\n  const label = name.charAt(0).toUpperCase() + name.substring(1);\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Switch\r\n          checked={checked}\r\n          onChange={handleChange}\r\n          name={name}\r\n        />\r\n      }\r\n      label={label}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NationalitySwitch;\r\n\r\nNationalitySwitch.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};","import NationalitySwitchGroup from './NationalitySwitchGroup';\r\nimport NationalitySwitch from './NationalitySwitch';\r\n\r\nexport default NationalitySwitchGroup;\r\n\r\nexport {\r\n  NationalitySwitch\r\n}","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport NationalitySwitch from './NationalitySwitch';\r\n\r\nconst NationalitySwitchGroup = ({ nationalities, onToggleNationality }) => {\r\n  const handleChange = (event) => {\r\n    onToggleNationality(event.target.name);\r\n  };\r\n\r\n  const styleHelperText = useMemo(() => ({ maxWidth: 400 }), []);\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">\r\n        Select nationalities\r\n      </FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(nationalities).map((nationalityName) => (\r\n          <NationalitySwitch\r\n            key={nationalityName}\r\n            checked={nationalities[nationalityName]}\r\n            handleChange={handleChange}\r\n            name={nationalityName}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n      <FormHelperText\r\n        style={styleHelperText}\r\n      >\r\n        Please choose at least 1 nationality.\r\n        Remember that if you toggle any switch, all\r\n        previously loaded data on main page will be removed.\r\n      </FormHelperText>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default NationalitySwitchGroup;\r\n\r\nNationalitySwitchGroup.propTypes = {\r\n  nationalities: PropTypes.objectOf(PropTypes.bool).isRequired,\r\n  onToggleNationality: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNationalitiesContainer from '../../hooks/useNationalitiesContainer';\r\nimport NationalitySwitchGroup from '../../components/NationalitySwitchGroup';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textWrapper: {\r\n    marginTop: 20,\r\n    marginBottom: 40\r\n  },\r\n  switchesWrapper: {\r\n    margin: `0 ${theme.spacing(4)}px`\r\n  }\r\n}));\r\n\r\nconst SettingsPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const { nationalities, doToggleNationality } = useNationalitiesContainer();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid\r\n        className={classes.textWrapper}\r\n        item\r\n      >\r\n        <Typography\r\n          variant=\"h5\"\r\n          color=\"inherit\"\r\n        >\r\n          Settings\r\n        </Typography>\r\n      </Grid>\r\n      <Grid\r\n        className={classes.switchesWrapper}\r\n        item\r\n      >\r\n        <NationalitySwitchGroup\r\n          nationalities={nationalities}\r\n          onToggleNationality={doToggleNationality}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import SettingsPage from './SettingsPage';\r\n\r\nexport default SettingsPage;"],"sourceRoot":""}