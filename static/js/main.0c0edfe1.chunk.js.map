{"version":3,"sources":["store/module/constants.js","store/module/reducer.js","hooks/useSearchContainer.js","store/module/actions.js","hooks/useModalContainer.js","hooks/useUsersContainer.js","components/Snackbars/CommonSnackbar.js","components/Snackbars/ErrorSnackbar/index.js","components/Snackbars/ErrorSnackbar/ErrorSnackbar.js","components/Snackbars/InfoSnackbar/index.js","components/Snackbars/InfoSnackbar/InfoSnackbar.js","components/UserModal/UserModalTypographyGrid.js","components/UserModal/UserModal.js","components/UserModal/index.js","components/UsersGrid/UsersGridItem.js","components/UsersGrid/UsersGridLayout.js","components/UsersGrid/UsersGridMessage.js","components/UsersGrid/UsersGridSearchResults.js","components/UsersGrid/UsersGrid.js","components/UsersGrid/index.js","pages/MainPage/index.js","pages/MainPage/MainPage.js","hooks/useNationalitiesContainer.js","components/NationalitySwitchGroup/NationalitySwitch.js","components/NationalitySwitchGroup/index.js","components/NationalitySwitchGroup/NationalitySwitchGroup.js","pages/SettingsPage/SettingsPage.js","pages/SettingsPage/index.js","pages/NotFoundPage/NotFoundPage.js","pages/NotFoundPage/index.js","Routes.js","hooks/useMenu.js","components/TopBar/TopBarMenu.js","components/TopBar/TopBarSearch.js","components/TopBar/index.js","components/TopBar/TopBar.js","store/reducers.js","services/api.config.js","services/api.service.js","store/module/sagas.js","store/middlewares.js","App.js","store/store.js","serviceWorker.js","index.js"],"names":["ACTION_TYPES","CONSTANTS","initialState","loading","error","users","usersCache","search","processing","searchString","modalUser","nationalities","swiss","spanish","french","british","appReducer","state","type","payload","USERS_SHOW_MORE","slice","USERS_FETCHING_STARTED","USERS_FETCHING_SUCCESS","USERS_FETCHING_ERROR","MODAL_OPENED","MODAL_CLOSED","SEARCH_TEXT_SET","SEARCH_TEXT_APPLY_STARTED","SEARCH_TEXT_APPLY_SUCCESS","NATIONALITY_SET","useSearchContainer","dispatch","useDispatch","disabled","useSelector","app","searchText","foundUsers","showResults","length","doSetSearchText","text","SEARCH_TEXT_CHANGE","searchTextChange","useModalContainer","user","doOpenModal","useCallback","openModal","doCloseModal","useUsersContainer","hasMore","useEffect","INITIALIZE_REQUEST","console","log","doRequestMore","BOTTOM_REACHED","CommonSnackbar","action","message","open","severity","props","Snackbar","Alert","variant","ErrorSnackbar","Button","color","size","onClick","window","location","reload","InfoSnackbar","UserModalTypography","Typography","component","UserModalTypographyGrid","IconComponent","CustomContent","Grid","container","item","xs","useStyles","makeStyles","theme","card","borderRadius","media","height","breakpoints","up","content","margin","spacing","UserModal","memo","onCloseModal","classes","isOpen","useMemo","Boolean","fullNameWithTitle","name","title","first","last","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","DialogTitle","id","Card","className","CardMedia","image","picture","large","CardContent","gutterBottom","login","username","email","phone","cell","alignItems","direction","street","number","postcode","city","country","prevProps","nextProps","root","UsersGridItem","onOpenModal","fullName","CardActionArea","justify","md","zeroMinWidth","noWrap","UsersGridLayout","map","index","key","value","sm","lg","UsersGridMessage","padding","messageEmpty","marginTop","UsersGridSearchResults","scrollToTop","scroll","Box","catalogEnd","UsersGrid","usersSearched","showSearchResults","onLoadMore","scrollDisplayStyle","display","style","loadMore","threshold","MainPage","loadingUsers","processingSearch","useNationalitiesContainer","doToggleNationality","NATIONALITY_TOGGLE","NationalitySwitch","checked","handleChange","label","charAt","toUpperCase","substring","FormControlLabel","control","Switch","onChange","NationalitySwitchGroup","onToggleNationality","event","target","styleHelperText","FormControl","FormLabel","FormGroup","Object","keys","nationalityName","FormHelperText","textWrapper","marginBottom","switchesWrapper","SettingsPage","NotFoundPage","ROUTES","Routes","path","exact","useMenu","useState","anchorEl","setAnchorEl","handleClose","handleOpen","currentTarget","TopBar","originPositionObj","vertical","horizontal","anchorOrigin","keepMounted","transformOrigin","MenuItem","Link","to","position","shape","backgroundColor","fade","palette","common","white","marginRight","marginLeft","width","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","TopBarSearch","onTextChange","InputBase","input","inputProps","placeholder","searchDisabled","onSearchChange","showSearch","useLocation","pathname","AppBar","TopBarMenu","Toolbar","IconButton","edge","aria-label","Hidden","only","makeReducers","combineReducers","API_URL","API_PICK_ONLY_KEYS","LANGUAGE_CODES","getUsers","usersCount","takeKeys","nationalitiesCodes","mapping","warn","nationsQueryParam","filter","join","axios","get","params","inc","results","nat","then","response","data","catch","Promise","reject","toggleNationalityFlow","watchNationalityClick","searchTextChangeFlow","watchSearchTextChange","fetchUsers","bottomReachedFlow","watchBottomReached","watchInitialize","rootSaga","select","isClickedCurrentlyOff","selectedCount","values","put","takeEvery","delay","usersState","usersVisible","toLowerCase","testString","includes","searchedUsers","take","task","cancel","fork","selectedNationalities","call","cache","cacheState","shouldSaveCache","allEffects","all","race","initialize","sagaMiddleware","createSagaMiddleware","makeMiddlewares","middlewares","startRootSaga","run","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","makeStore","ConnectedTopBar","App","styleHelper","basename","CssBaseline","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c0edfe1.chunk.js","sourcesContent":["const MODULE_NAME = 'APP';\r\n\r\nconst ACTION_TYPES = {\r\n  'INITIALIZE_REQUEST': `${MODULE_NAME}/INITIALIZE_REQUEST`,\r\n  'BOTTOM_REACHED': `${MODULE_NAME}/BOTTOM_REACHED`,\r\n  'MODAL_OPENED': `${MODULE_NAME}/MODAL_OPENED`,\r\n  'MODAL_CLOSED': `${MODULE_NAME}/MODAL_CLOSED`,\r\n  'NATIONALITY_TOGGLE': `${MODULE_NAME}/NATIONALITY_TOGGLE`,\r\n  'NATIONALITY_SET': `${MODULE_NAME}/NATIONALITY_SET`,\r\n  'SEARCH_TEXT_APPLY_STARTED': `${MODULE_NAME}/SEARCH_TEXT_APPLY_STARTED`,\r\n  'SEARCH_TEXT_APPLY_SUCCESS': `${MODULE_NAME}/SEARCH_TEXT_APPLY_SUCCESS`,\r\n  'SEARCH_TEXT_CHANGE': `${MODULE_NAME}/SEARCH_TEXT_CHANGE`,\r\n  'SEARCH_TEXT_SET': `${MODULE_NAME}/SEARCH_TEXT_SET`,\r\n  'USERS_FETCHING_STARTED': `${MODULE_NAME}/USERS_FETCHING_STARTED`,\r\n  'USERS_FETCHING_ERROR': `${MODULE_NAME}/USERS_FETCHING_ERROR`,\r\n  'USERS_FETCHING_SUCCESS': `${MODULE_NAME}/USERS_FETCHING_SUCCESS`,\r\n  'USERS_SHOW_MORE': `${MODULE_NAME}/USERS_SHOW_MORE`,\r\n};\r\n\r\nconst CONSTANTS = {\r\n  SEARCH_DELAY_MS: 500,\r\n  USERS_PER_TICK: 50,\r\n  USERS_MAX_COUNT: 1000\r\n};\r\n\r\nexport { ACTION_TYPES, CONSTANTS };\r\n","import { ACTION_TYPES, CONSTANTS } from './constants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  users: [],\r\n  usersCache: [],\r\n  search: {\r\n    users: [],\r\n    processing: false,\r\n    searchString: ''\r\n  },\r\n  modalUser: null,\r\n  nationalities: {\r\n    swiss: true,\r\n    spanish: true,\r\n    french: true,\r\n    british: true\r\n  }\r\n};\r\n\r\nconst appReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ACTION_TYPES.USERS_SHOW_MORE:\r\n      return {\r\n        ...state,\r\n        users: [\r\n          ...state.users,\r\n          ...state.usersCache.slice(0, CONSTANTS.USERS_PER_TICK)\r\n        ],\r\n        usersCache: [\r\n          ...state.usersCache.slice(CONSTANTS.USERS_PER_TICK)\r\n        ]\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: initialState.error\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        usersCache: payload\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_ERROR:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: payload\r\n        };\r\n\r\n\r\n    case ACTION_TYPES.MODAL_OPENED:\r\n      return {\r\n        ...state,\r\n        modalUser: payload\r\n      };\r\n\r\n    case ACTION_TYPES.MODAL_CLOSED:\r\n      return {\r\n        ...state,\r\n        modalUser: null\r\n      };\r\n\r\n    case ACTION_TYPES.SEARCH_TEXT_SET:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          searchString: payload\r\n        }\r\n      };\r\n\r\n    case ACTION_TYPES.SEARCH_TEXT_APPLY_STARTED:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          processing: true\r\n        }\r\n      };\r\n\r\n    case ACTION_TYPES.SEARCH_TEXT_APPLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          processing: false,\r\n          users: payload\r\n        }\r\n      };\r\n\r\n    case ACTION_TYPES.NATIONALITY_SET:\r\n      return {\r\n        ...state,\r\n        loading: initialState.loading,\r\n        search: initialState.search,\r\n        users: initialState.users,\r\n        usersCache: initialState.usersCache,\r\n        nationalities: {\r\n          ...state.nationalities,\r\n          [payload]: !state.nationalities[payload]\r\n        }\r\n      };\r\n\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { searchTextChange } from '../store/module';\r\n\r\nconst useSearchContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const disabled = useSelector(state => state.app.loading);\r\n  const processing = useSelector(state => state.app.search.processing);\r\n  const searchText = useSelector(state => state.app.search.searchString);\r\n  const foundUsers = useSelector(state => state.app.search.users);\r\n  const showResults = (!!foundUsers?.length || !!searchText.length);\r\n\r\n  const doSetSearchText = (text) => {\r\n    dispatch(searchTextChange(text))\r\n  };\r\n\r\n  return { foundUsers, disabled, processing, searchText, showResults, doSetSearchText }\r\n};\r\n\r\nexport default useSearchContainer;","import { ACTION_TYPES } from './constants';\r\n\r\nexport const initializeUsers = () => ({\r\n  type: ACTION_TYPES.INITIALIZE_REQUEST\r\n});\r\n\r\nexport const bottomReached = () => ({\r\n  type: ACTION_TYPES.BOTTOM_REACHED\r\n});\r\n\r\nexport const openModal = (user) => ({\r\n  type: ACTION_TYPES.MODAL_OPENED,\r\n  payload: user\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: ACTION_TYPES.MODAL_CLOSED\r\n});\r\n\r\nexport const searchTextChange = (text) => ({\r\n  type: ACTION_TYPES.SEARCH_TEXT_CHANGE,\r\n  payload: text\r\n});\r\n\r\nexport const toggleNationality = (nationalityName) => ({\r\n  type: ACTION_TYPES.NATIONALITY_TOGGLE,\r\n  payload: nationalityName\r\n});\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { openModal, closeModal } from '../store/module';\r\nimport { useCallback } from 'react';\r\n\r\nconst useModalContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(state => state.app.modalUser);\r\n\r\n  const doOpenModal = useCallback((user) => {\r\n    dispatch(openModal(user))\r\n  }, [dispatch]);\r\n  const doCloseModal = useCallback(() => {\r\n    dispatch(closeModal());\r\n  }, [dispatch]);\r\n\r\n  return { user, doOpenModal, doCloseModal }\r\n};\r\n\r\nexport default useModalContainer;","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  CONSTANTS,\r\n  bottomReached,\r\n  initializeUsers\r\n} from '../store/module';\r\n\r\nconst useUsersContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const users = useSelector(state => state.app.users);\r\n  const usersCache = useSelector(state => state.app.usersCache);\r\n  const loading = useSelector(state => state.app.loading);\r\n  const error = useSelector(state => state.app.error);\r\n  const hasMore = (users?.length < CONSTANTS.USERS_MAX_COUNT);\r\n\r\n  const doRequestMore = () => {\r\n    dispatch(bottomReached());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialize = () => {\r\n      dispatch(initializeUsers());\r\n    };\r\n    initialize();\r\n  }, [dispatch]);\r\n\r\n\r\n  console.log('usersCache', usersCache?.length );\r\n  console.log('users', users?.length );\r\n\r\n  return { doRequestMore, error, hasMore, loading, users }\r\n};\r\n\r\nexport default useUsersContainer;","import React from 'react';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst CommonSnackbar = ({ action, message, open, severity, ...props }) => {\r\n  return (\r\n    <Snackbar\r\n      {...props}\r\n      open={open}\r\n    >\r\n      <Alert\r\n        variant=\"filled\"\r\n        severity={severity}\r\n        action={action}\r\n      >\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n};\r\n\r\nexport default CommonSnackbar;\r\n","import ErrorSnackbar from './ErrorSnackbar';\r\n\r\nexport default ErrorSnackbar;","import React from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CommonSnackbar from '../CommonSnackbar';\r\n\r\nconst ErrorSnackbar = ({ open }) => {\r\n  const doReload = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <CommonSnackbar\r\n      action={\r\n        <Button\r\n          color=\"inherit\"\r\n          variant=\"outlined\"\r\n          size=\"medium\"\r\n          onClick={doReload}\r\n        >\r\n          Reload app\r\n        </Button>\r\n      }\r\n      open={open}\r\n      message=\"Error occurred, please click button to reload app\"\r\n      severity=\"error\"\r\n    />\r\n  )\r\n};\r\n\r\nexport default ErrorSnackbar;\r\n","import InfoSnackbar from './InfoSnackbar'\r\n\r\nexport default InfoSnackbar;","import React from 'react';\r\n\r\nimport CommonSnackbar from '../CommonSnackbar';\r\n\r\nconst InfoSnackbar = ({ message, open }) => {\r\n  return (\r\n    <CommonSnackbar\r\n      open={open}\r\n      message={message}\r\n      severity=\"info\"\r\n    />\r\n  )\r\n};\r\n\r\nexport default InfoSnackbar;\r\n","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst UserModalTypography = ({ text }) => (\r\n  <Typography\r\n    variant=\"body2\"\r\n    color=\"textSecondary\"\r\n    component=\"p\"\r\n  >\r\n    {text}\r\n  </Typography>\r\n);\r\n\r\nconst UserModalTypographyGrid = ({ IconComponent, CustomContent, text, ...props }) => {\r\n  return (\r\n    <Grid container {...props}>\r\n      <Grid item xs={2}>\r\n        { IconComponent }\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        {text\r\n          ? <UserModalTypography text={text} />\r\n          : CustomContent\r\n        }\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserModalTypographyGrid;\r\n\r\nexport {\r\n  UserModalTypography\r\n}","import React, { memo, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\n\r\nimport UserModalTypographyGrid, { UserModalTypography } from './UserModalTypographyGrid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    borderRadius: 0\r\n  },\r\n  media: {\r\n    height: 200,\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 260,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      height: 300,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      height: 340,\r\n    }\r\n  },\r\n  content: {\r\n    margin: theme.spacing(1),\r\n    [theme.breakpoints.up('sm')]: {\r\n      margin: theme.spacing(2),\r\n    },\r\n  }\r\n}));\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.user === nextProps.user;\r\n};\r\n\r\nconst UserModal = memo(({ user, onCloseModal }) => {\r\n  const classes = useStyles();\r\n\r\n  const isOpen = useMemo(() => Boolean(user), [user]);\r\n  const fullNameWithTitle = useMemo(() => {\r\n    return `${user?.name?.title} ${user?.name?.first} ${user?.name?.last}`;\r\n  }, [user]);\r\n\r\n  if (!user) { return null; }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      onClose={onCloseModal}\r\n      aria-labelledby=\"user-dialog-title\"\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id=\"user-dialog-title\">\r\n        Details\r\n      </DialogTitle>\r\n\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={user.picture.large}\r\n          title={`${fullNameWithTitle} face photo`}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h4\"\r\n            component=\"h2\"\r\n          >\r\n            {fullNameWithTitle}\r\n          </Typography>\r\n\r\n          <UserModalTypographyGrid\r\n            IconComponent={<PersonIcon color=\"primary\" />}\r\n            text={user.login.username}\r\n          />\r\n\r\n          <UserModalTypographyGrid\r\n            IconComponent={<EmailIcon color=\"primary\" />}\r\n            text={user.email}\r\n          />\r\n\r\n          <UserModalTypographyGrid\r\n            IconComponent={<PhoneIcon color=\"primary\" />}\r\n            text={user.phone}\r\n          />\r\n\r\n          <UserModalTypographyGrid\r\n            IconComponent={<PhoneAndroidIcon color=\"primary\" />}\r\n            text={user.cell}\r\n          />\r\n\r\n          <UserModalTypographyGrid\r\n            alignItems=\"center\"\r\n            IconComponent={<HomeIcon color=\"primary\" />}\r\n            CustomContent={\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n              >\r\n                <Grid item xs>\r\n                  <UserModalTypography\r\n                    text={`${user.location.street.name} ${user.location.street.number}`}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <UserModalTypography\r\n                    text={`${user.location.postcode} ${user.location.city} `}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <UserModalTypography\r\n                    text={`${user.location.state} / ${user.location.country}`}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n\r\n        </CardContent>\r\n      </Card>\r\n    </Dialog>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UserModal;\r\n","import UserModal from './UserModal';\r\n\r\nexport default UserModal;","import React, { useMemo, memo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 260\r\n  },\r\n  media: {\r\n    height: 80,\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 100,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      height: 120,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      height: 150,\r\n    }\r\n  }\r\n}));\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.user === nextProps.user;\r\n};\r\n\r\nconst UsersGridItem = memo(({ user, onOpenModal }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {\r\n    onOpenModal(user);\r\n  };\r\n\r\n  const fullName = useMemo(() => {\r\n    return `${user?.name.first} ${user?.name.last}`;\r\n  }, [user]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea\r\n        onClick={handleClick}\r\n      >\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={user?.picture.large}\r\n          title={`${fullName} face photo`}\r\n        />\r\n        <CardContent>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n          >\r\n            {fullName}\r\n          </Typography>\r\n\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"stretch\"\r\n          >\r\n            <Grid item xs={3} md={2}>\r\n              <PersonIcon color=\"primary\" />\r\n            </Grid>\r\n            <Grid item xs={9} md={10} zeroMinWidth>\r\n              <Typography\r\n                noWrap\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n              >\r\n                {user?.login.username}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs={3} md={2}>\r\n              <EmailIcon color=\"primary\" />\r\n            </Grid>\r\n            <Grid item xs={9} md={10} zeroMinWidth>\r\n              <Typography\r\n                noWrap\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n              >\r\n                {user?.email}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UsersGridItem;\r\n","import React, { memo } from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport UsersGridItem from './UsersGridItem';\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.users === nextProps.users;\r\n};\r\n\r\nconst UsersGridLayout = memo(({ users, onOpenModal }) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={4}\r\n    >\r\n      {users?.map((user, index) => (\r\n        <Grid\r\n          item\r\n          key={user.id.value}\r\n          xs={6}\r\n          sm={4}\r\n          md={3}\r\n          lg={2}\r\n        >\r\n          {index}\r\n          <UsersGridItem\r\n            user={user}\r\n            onOpenModal={onOpenModal}\r\n          />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UsersGridLayout;\r\n","import React  from 'react';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst UsersGridMessage = ({ className, message }) => {\r\n  return (\r\n    <Grid\r\n      className={className}\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={4}\r\n    >\r\n      <Grid item>\r\n        <Typography\r\n          variant=\"h4\"\r\n          color=\"textSecondary\"\r\n        >\r\n          {message}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UsersGridMessage;\r\n","import React, { memo, useCallback, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport UsersGridLayout from './UsersGridLayout';\r\nimport UsersGridMessage from './UsersGridMessage';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: `0 ${theme.spacing(4)}px`\r\n  },\r\n  messageEmpty: {\r\n    marginTop: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.users === nextProps.users;\r\n};\r\n\r\nconst UsersGridSearchResults = memo(({ users, onOpenModal }) => {\r\n  const classes = useStyles();\r\n\r\n  const scrollToTop = useCallback(() => {\r\n    window.scroll(0,0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, [users, scrollToTop]);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <UsersGridLayout\r\n        users={users}\r\n        onOpenModal={onOpenModal}\r\n      />\r\n      {!users?.length && <UsersGridMessage\r\n        className={classes.messageEmpty}\r\n        message={'No matching results'}\r\n      />}\r\n    </Box>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UsersGridSearchResults;\r\n","import React, { useMemo, memo } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport UsersGridLayout from './UsersGridLayout';\r\nimport UsersGridMessage from './UsersGridMessage';\r\nimport UsersGridSearchResults from './UsersGridSearchResults';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(4)\r\n  },\r\n  catalogEnd: {\r\n    marginTop: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.users === nextProps.users\r\n    && prevProps.usersSearched === nextProps.usersSearched;\r\n};\r\n\r\nconst UsersGrid = memo(({\r\n  hasMore,\r\n  users,\r\n  usersSearched,\r\n  showSearchResults,\r\n  onOpenModal,\r\n  onLoadMore\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const scrollDisplayStyle = useMemo(\r\n    () => (showSearchResults ? { display: 'none' } : {}),\r\n    [showSearchResults]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {showSearchResults && <UsersGridSearchResults\r\n        users={usersSearched}\r\n        onOpenModal={onOpenModal}\r\n      />}\r\n      <InfiniteScroll\r\n        className={classes.root}\r\n        style={scrollDisplayStyle}\r\n        loadMore={onLoadMore}\r\n        hasMore={hasMore}\r\n        threshold={500}\r\n      >\r\n        <UsersGridLayout\r\n          users={users}\r\n          onOpenModal={onOpenModal}\r\n        />\r\n        {!hasMore && <UsersGridMessage\r\n          className={classes.catalogEnd}\r\n          message={'End of users catalog'}\r\n        />}\r\n      </InfiniteScroll>\r\n    </>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UsersGrid;\r\n","import UsersGrid from './UsersGrid';\r\n\r\nexport default UsersGrid;","import MainPage from './MainPage';\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nimport useModalContainer from '../../hooks/useModalContainer';\r\nimport useSearchContainer from '../../hooks/useSearchContainer';\r\nimport useUsersContainer from '../../hooks/useUsersContainer';\r\nimport ErrorSnackbar from '../../components/Snackbars/ErrorSnackbar';\r\nimport InfoSnackbar from '../../components/Snackbars/InfoSnackbar';\r\nimport UserModal from '../../components/UserModal';\r\nimport UsersGrid from '../../components/UsersGrid';\r\n\r\nconst MainPage = () => {\r\n  const { user: modalUser, doOpenModal, doCloseModal } = useModalContainer();\r\n  const { error, hasMore, loading: loadingUsers, users, doRequestMore } = useUsersContainer();\r\n  const { processing: processingSearch, foundUsers, showResults } = useSearchContainer();\r\n\r\n  return (\r\n    <>\r\n      <ErrorSnackbar\r\n        open={error}\r\n      />\r\n      <InfoSnackbar\r\n        open={loadingUsers}\r\n        message={'Loading ... '}\r\n      />\r\n      <InfoSnackbar\r\n        open={processingSearch}\r\n        message={'Searching ... '}\r\n      />\r\n      <UserModal\r\n        user={modalUser}\r\n        onCloseModal={doCloseModal}\r\n      />\r\n      <UsersGrid\r\n        hasMore={hasMore}\r\n        users={users}\r\n        usersSearched={foundUsers}\r\n        showSearchResults={showResults}\r\n        onLoadMore={doRequestMore}\r\n        onOpenModal={doOpenModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { toggleNationality } from '../store/module';\r\n\r\nconst useNationalitiesContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const nationalities = useSelector(state => state.app.nationalities);\r\n\r\n  const doToggleNationality = (name) => dispatch(toggleNationality(name));\r\n\r\n  return { nationalities, doToggleNationality }\r\n};\r\n\r\nexport default useNationalitiesContainer;","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst NationalitySwitch = ({ checked, handleChange, name }) => {\r\n  const label = name.charAt(0).toUpperCase() + name.substring(1);\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Switch\r\n          checked={checked}\r\n          onChange={handleChange}\r\n          name={name}\r\n        />\r\n      }\r\n      label={label}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NationalitySwitch;\r\n","import NationalitySwitchGroup from './NationalitySwitchGroup';\r\n\r\nexport default NationalitySwitchGroup;","import React, { useMemo } from 'react';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport NationalitySwitch from './NationalitySwitch';\r\n\r\nconst NationalitySwitchGroup = ({ nationalities, onToggleNationality }) => {\r\n  const handleChange = (event) => {\r\n    onToggleNationality(event.target.name);\r\n  };\r\n\r\n  const styleHelperText = useMemo(() => ({ maxWidth: 400 }), []);\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">\r\n        Select nationalities\r\n      </FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(nationalities).map((nationalityName) => (\r\n          <NationalitySwitch\r\n            key={nationalityName}\r\n            checked={nationalities[nationalityName]}\r\n            handleChange={handleChange}\r\n            name={nationalityName}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n      <FormHelperText\r\n        style={styleHelperText}\r\n      >\r\n        Please choose at least 1 nationality.\r\n        Remember that if you toggle any switch, all\r\n        previously loaded data on main page will be removed.\r\n      </FormHelperText>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default NationalitySwitchGroup;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNationalitiesContainer from '../../hooks/useNationalitiesContainer';\r\nimport NationalitySwitchGroup from '../../components/NationalitySwitchGroup';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textWrapper: {\r\n    marginTop: 20,\r\n    marginBottom: 40\r\n  },\r\n  switchesWrapper: {\r\n    margin: `0 ${theme.spacing(4)}px`\r\n  }\r\n}));\r\n\r\nconst SettingsPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const { nationalities, doToggleNationality } = useNationalitiesContainer();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid\r\n        className={classes.textWrapper}\r\n        item\r\n      >\r\n        <Typography\r\n          variant=\"h5\"\r\n          color=\"inherit\"\r\n        >\r\n          Settings\r\n        </Typography>\r\n      </Grid>\r\n      <Grid\r\n        className={classes.switchesWrapper}\r\n        item\r\n      >\r\n        <NationalitySwitchGroup\r\n          nationalities={nationalities}\r\n          onToggleNationality={doToggleNationality}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import SettingsPage from './SettingsPage';\r\n\r\nexport default SettingsPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: 200,\r\n  },\r\n  text: {\r\n    margin: '0 30px'\r\n  }\r\n});\r\n\r\nconst UsersGrid = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.root}\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item>\r\n        <Typography\r\n          className={classes.text}\r\n          variant=\"h4\"\r\n          color=\"textSecondary\"\r\n        >\r\n          404 Page Not Found :(\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UsersGrid;\r\n","import NotFoundPage from './NotFoundPage';\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport MainPage from './pages/MainPage';\r\nimport SettingsPage from './pages/SettingsPage';\r\nimport NotFoundPage from './pages/NotFoundPage';\r\n\r\nexport const ROUTES = {\r\n  root: '/',\r\n  settings: '/settings'\r\n};\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        path={ROUTES.root}\r\n        component={MainPage}\r\n        exact\r\n      />\r\n      <Route\r\n        path={ROUTES.settings}\r\n        component={SettingsPage}\r\n      />\r\n      <Route\r\n        component={NotFoundPage}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { useState } from 'react';\r\n\r\nconst useMenu = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const isOpen = Boolean(anchorEl);\r\n\r\n  const handleOpen = (event) => { setAnchorEl(event.currentTarget) };\r\n\r\n  const handleClose = () => { setAnchorEl(null) };\r\n\r\n  return { anchorEl, isOpen, handleClose, handleOpen }\r\n};\r\n\r\nexport default useMenu;","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { ROUTES } from '../../Routes';\r\n\r\nconst TopBar = (props) => {\r\n  const { anchorEl, handleClose, isOpen } = props;\r\n\r\n  const originPositionObj = useMemo(() => ({\r\n    vertical: 'top',\r\n    horizontal: 'left',\r\n  }), []);\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={originPositionObj}\r\n      keepMounted\r\n      transformOrigin={originPositionObj}\r\n      open={isOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem\r\n        onClick={handleClose}\r\n        component={Link}\r\n        to={ROUTES.root}\r\n      >\r\n        Users Gallery\r\n      </MenuItem>\r\n      <MenuItem\r\n        onClick={handleClose}\r\n        component={Link}\r\n        to={ROUTES.settings}\r\n      >\r\n        Settings\r\n      </MenuItem>\r\n    </Menu>\r\n  )\r\n};\r\n\r\nexport default TopBar;","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '30ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst TopBarSearch = ({ disabled, text, onTextChange }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        disabled={disabled}\r\n        inputProps={{ 'aria-label': 'search' }}\r\n        placeholder=\"Search by full name\"\r\n        value={text}\r\n        onChange={onTextChange}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TopBarSearch;","import TopBar from './TopBar';\r\n\r\nexport default TopBar;","import React from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { ROUTES } from '../../Routes';\r\nimport useMenu from '../../hooks/useMenu';\r\nimport TopBarMenu from './TopBarMenu';\r\nimport TopBarSearch from './TopBarSearch';\r\n\r\nconst TopBar = ({ searchDisabled, searchText, onSearchChange, ...props }) => {\r\n  const { anchorEl, isOpen, handleClose, handleOpen } = useMenu();\r\n  const location = useLocation();\r\n\r\n  const handleChange = (event) => {\r\n    onSearchChange(event.target.value);\r\n  };\r\n\r\n  const showSearch = (location.pathname === ROUTES.root);\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      {...props}\r\n    >\r\n      <TopBarMenu\r\n        anchorEl={anchorEl}\r\n        handleClose={handleClose}\r\n        isOpen={isOpen}\r\n      />\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={handleOpen}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Hidden\r\n          only={'xs'}\r\n        >\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n          >\r\n            Address Book\r\n          </Typography>\r\n        </Hidden>\r\n        {showSearch && (\r\n          <TopBarSearch\r\n            text={searchText}\r\n            disabled={searchDisabled}\r\n            onTextChange={handleChange}\r\n          />\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default TopBar;","import { combineReducers } from 'redux';\r\n\r\nimport { appReducer } from './module';\r\n\r\nconst makeReducers = () => combineReducers({\r\n  app: appReducer\r\n});\r\n\r\nexport default makeReducers;\r\n","export const API_URL = 'https://randomuser.me/api/';\r\n\r\nexport const API_PICK_ONLY_KEYS = [\r\n  'name',\r\n  'location',\r\n  'email',\r\n  'login',\r\n  'phone',\r\n  'cell',\r\n  'id',\r\n  'picture',\r\n  'nat'\r\n];\r\n\r\nexport const DEFAULT_USERS_COUNT = 1;\r\n\r\nexport const LANGUAGE_CODES = {\r\n  british: 'GB',\r\n  french: 'FR',\r\n  spanish: 'ES',\r\n  swiss: 'CH'\r\n};","import axios from 'axios';\r\n\r\nimport {\r\n  API_URL,\r\n  API_PICK_ONLY_KEYS,\r\n  DEFAULT_USERS_COUNT,\r\n  LANGUAGE_CODES\r\n} from './api.config';\r\n\r\nexport const getUsers = ({\r\n  nationalities = [],\r\n  usersCount = DEFAULT_USERS_COUNT,\r\n  takeKeys = API_PICK_ONLY_KEYS\r\n} = {}) => {\r\n  const nationalitiesCodes = nationalities.map((name) => {\r\n    const mapping = LANGUAGE_CODES[name];\r\n    !mapping && console.warn('No API mapping for nationality:', name);\r\n    return mapping;\r\n  });\r\n\r\n  const nationsQueryParam = nationalitiesCodes?.filter(Boolean).join(',');\r\n\r\n  return axios.get(API_URL, {\r\n    params: {\r\n      ...(takeKeys && { inc: takeKeys.join(',') }),\r\n      ...(usersCount && { results: usersCount }),\r\n      ...(nationsQueryParam && { nat: nationsQueryParam })\r\n    }\r\n  })\r\n    .then(response => {\r\n      return response.data?.results\r\n    })\r\n    .catch(error => {\r\n      return Promise.reject(error);\r\n    })\r\n};","import {\r\n  all,\r\n  call,\r\n  cancel,\r\n  delay,\r\n  fork,\r\n  put,\r\n  race,\r\n  select,\r\n  take,\r\n  takeEvery\r\n} from 'redux-saga/effects';\r\n\r\nimport { ACTION_TYPES, CONSTANTS } from './constants';\r\nimport { getUsers } from '../../services/api.service';\r\n\r\nexport function* toggleNationalityFlow({ payload }) {\r\n  const nationalities = yield select(state => state.app.nationalities);\r\n  const isClickedCurrentlyOff = !nationalities[payload];\r\n  const selectedCount = Object.values(nationalities).filter(Boolean).length;\r\n\r\n  if (isClickedCurrentlyOff || selectedCount > 1) {\r\n    yield put({\r\n      type: ACTION_TYPES.NATIONALITY_SET,\r\n      payload: payload\r\n    });\r\n  }\r\n}\r\n\r\nexport function* watchNationalityClick() {\r\n  yield takeEvery(ACTION_TYPES.NATIONALITY_TOGGLE, toggleNationalityFlow);\r\n}\r\n\r\nexport function* searchTextChangeFlow(payload) {\r\n  yield put({\r\n    type: ACTION_TYPES.SEARCH_TEXT_SET,\r\n    payload\r\n  });\r\n  yield put({\r\n    type: ACTION_TYPES.SEARCH_TEXT_APPLY_STARTED,\r\n  });\r\n  if (!!payload?.length)  {\r\n    yield delay(CONSTANTS.SEARCH_DELAY_MS);\r\n  }\r\n\r\n\r\n  const usersState = yield select(state => state.app.users);\r\n  const searchString = yield select(state => state.app.search.searchString);\r\n\r\n  const usersVisible = usersState.filter((user) => {\r\n    const fullName = `${user?.name.first} ${user?.name.last}`?.toLowerCase();\r\n    const testString = searchString?.toLowerCase();\r\n    return fullName?.includes(testString)\r\n  });\r\n\r\n  const searchedUsers = !!searchString?.length ? usersVisible : [];\r\n\r\n  yield put({\r\n    type: ACTION_TYPES.SEARCH_TEXT_APPLY_SUCCESS,\r\n    payload: searchedUsers\r\n  });\r\n}\r\n\r\nexport function* watchSearchTextChange() {\r\n  let task;\r\n  while (true) {\r\n    const { payload } = yield take(ACTION_TYPES.SEARCH_TEXT_CHANGE);\r\n    if (task) {\r\n      yield cancel(task);\r\n    }\r\n    task = yield fork(searchTextChangeFlow, payload);\r\n  }\r\n}\r\n\r\nexport function* fetchUsers() {\r\n  yield put({\r\n    type: ACTION_TYPES.USERS_FETCHING_STARTED\r\n  });\r\n\r\n  const nationalities = yield select(state => state.app.nationalities);\r\n  const selectedNationalities = Object.keys(nationalities)\r\n    .filter((name) => nationalities[name]);\r\n\r\n  try {\r\n    const cache = yield call(getUsers ,{\r\n      usersCount: CONSTANTS.USERS_PER_TICK,\r\n      nationalities: selectedNationalities\r\n    });\r\n\r\n    console.log('FETCHED USERS:', cache);\r\n\r\n    yield put({\r\n      type: ACTION_TYPES.USERS_FETCHING_SUCCESS,\r\n      payload: cache\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTION_TYPES.USERS_FETCHING_ERROR,\r\n      payload: error\r\n    });\r\n  }\r\n}\r\n\r\nexport function* bottomReachedFlow() {\r\n  const usersState = yield select(state => state.app.users);\r\n  const cacheState = yield select(state => state.app.usersCache);\r\n  const shouldSaveCache = (usersState?.length + cacheState?.length) < CONSTANTS.USERS_MAX_COUNT;\r\n\r\n  const allEffects = [\r\n    ...(shouldSaveCache ? [fork(fetchUsers)] : []),\r\n    put({\r\n      type: ACTION_TYPES.USERS_SHOW_MORE\r\n    }),\r\n    ...(!shouldSaveCache ? [put({\r\n        type: ACTION_TYPES.USERS_FETCHING_SUCCESS,\r\n        payload: []\r\n      })] : [])\r\n  ];\r\n\r\n  yield all(allEffects);\r\n}\r\n\r\nexport function* watchBottomReached() {\r\n  while (true) {\r\n    yield all([\r\n      take(ACTION_TYPES.USERS_FETCHING_SUCCESS),\r\n      take(ACTION_TYPES.BOTTOM_REACHED)\r\n    ]);\r\n    yield fork(bottomReachedFlow);\r\n  }\r\n}\r\n\r\nexport function* watchInitialize() {\r\n  while (true) {\r\n    const [initialize, nationalitySet] = yield race([\r\n      take(ACTION_TYPES.INITIALIZE_REQUEST),\r\n      take(ACTION_TYPES.NATIONALITY_SET)\r\n    ]);\r\n    if (nationalitySet) { return }\r\n    if (initialize) {\r\n      const users = yield select(state => state.app.users);\r\n      const usersCache = yield select(state => state.app.usersCache);\r\n      if (!users.length && !usersCache.length) {\r\n        yield fork(fetchUsers);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchInitialize(),\r\n    watchBottomReached(),\r\n    watchNationalityClick(),\r\n    watchSearchTextChange()\r\n  ]);\r\n}","import { createLogger } from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport rootSaga from './module/sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst makeMiddlewares = () => {\r\n  const isDevelopmentMode = process.env.NODE_ENV !== 'production';\r\n\r\n  const middlewares = [\r\n    sagaMiddleware\r\n  ];\r\n\r\n  if (isDevelopmentMode) {\r\n    middlewares.push(createLogger({\r\n      collapsed: true\r\n    }));\r\n  }\r\n\r\n  return {\r\n    middlewares,\r\n    startRootSaga: () => { sagaMiddleware.run(rootSaga); }\r\n  }\r\n};\r\n\r\nexport default makeMiddlewares;\r\n","import React, { useMemo } from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport useSearchContainer from './hooks/useSearchContainer';\r\nimport TopBar from './components/TopBar';\r\nimport Routes from './Routes';\r\nimport makeStore from './store';\r\n\r\nconst store = makeStore();\r\n\r\nconst ConnectedTopBar = (props) => {\r\n  const { disabled, searchText, doSetSearchText} = useSearchContainer();\r\n\r\n  return (\r\n    <TopBar\r\n      {...props}\r\n      searchDisabled={disabled}\r\n      searchText={searchText}\r\n      onSearchChange={doSetSearchText}\r\n    />\r\n  )\r\n};\r\n\r\nconst App = () => {\r\n  const styleHelper = useMemo(() => ({ marginTop: 80 }), []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router basename=\"/address-book\">\r\n          <>\r\n            <CssBaseline />\r\n            <ConnectedTopBar />\r\n            <Box style={styleHelper}>\r\n              <Routes />\r\n            </Box>\r\n          </>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport makeReducers from './reducers';\r\nimport makeMiddlewares from './middlewares';\r\n\r\nconst makeStore = (initialState = {}) => {\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const { middlewares, startRootSaga } = makeMiddlewares();\r\n\r\n  const store = createStore(\r\n    makeReducers(),\r\n    initialState,\r\n    composeEnhancers(\r\n      applyMiddleware(\r\n        ...middlewares\r\n      )\r\n    )\r\n  );\r\n\r\n  startRootSaga();\r\n\r\n  return store;\r\n};\r\n\r\nexport default makeStore;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}