{"version":3,"sources":["store/module/constants.js","services/api.config.js","services/api.service.js","store/module/sagas.js","store/module/reducer.js","hooks/useSearchContainer.js","store/module/actions.js","hooks/useModalContainer.js","hooks/useUsersContainer.js","components/Snackbars/CommonSnackbar.js","components/Snackbars/ErrorSnackbar/index.js","components/Snackbars/ErrorSnackbar/ErrorSnackbar.js","components/Snackbars/InfoSnackbar/index.js","components/Snackbars/InfoSnackbar/InfoSnackbar.js","components/UsersGrids/UsersGridLayout/UsersGridLayoutItem.js","components/UsersGrids/UsersGridLayout/UsersGridLayout.js","components/UsersGrids/UsersGridLayout/UsersGridLayoutMessage.js","components/UsersGrids/UsersGridLayout/index.js","components/UsersGrids/UsersGridInfinite/UsersGridInfinite.js","components/UsersGrids/UsersGridInfinite/index.js","components/UsersGrids/UsersGridSearched/UsersGridSearched.js","components/UsersGrids/UsersGridSearched/index.js","components/UserModal/UserModalContent/UserModalContentTypographyGrid.js","components/UserModal/UserModalContent/UserModalContentInfo.js","components/UserModal/UserModalContent/UserModalContentMedia.js","components/UserModal/UserModalContent/UserModalContent.js","components/UserModal/UserModalContent/index.js","components/UserModal/index.js","components/UserModal/UserModal.js","pages/MainPage/index.js","pages/MainPage/MainPage.js","hooks/useNationalitiesContainer.js","components/NationalitySwitchGroup/NationalitySwitch.js","components/NationalitySwitchGroup/index.js","components/NationalitySwitchGroup/NationalitySwitchGroup.js","pages/SettingsPage/SettingsPage.js","pages/SettingsPage/index.js","pages/NotFoundPage/NotFoundPage.js","pages/NotFoundPage/index.js","Routes.js","hooks/useMenu.js","components/TopBar/TopBarMenu.js","components/TopBar/TopBarSearch.js","components/TopBar/index.js","components/TopBar/TopBar.js","store/reducers.js","store/middlewares.js","App.js","store/store.js","serviceWorker.js","index.js"],"names":["ACTION_TYPES","CONSTANTS","API_URL","API_PICK_ONLY_KEYS","LANGUAGE_CODES","british","french","spanish","swiss","getUsers","nationalities","page","seed","takeKeys","usersCount","nationalitiesCodes","map","name","mapping","console","warn","nationsQueryParam","filter","Boolean","join","axios","get","params","inc","results","nat","then","response","data","catch","error","Promise","reject","toggleNationalityFlow","watchNationalityClick","searchTextChangeFlow","watchSearchTextChange","fetchUsers","bottomReachedFlow","watchBottomReached","watchInitialize","rootSaga","payload","select","state","app","isClickedCurrentlyOff","selectedCount","Object","values","length","put","type","NATIONALITY_SET","takeEvery","NATIONALITY_TOGGLE","SEARCH_TEXT_SET","SEARCH_TEXT_APPLY_STARTED","delay","users","usersState","search","searchString","usersVisible","user","fullName","first","last","toLowerCase","testString","includes","searchedUsers","SEARCH_TEXT_APPLY_SUCCESS","take","SEARCH_TEXT_CHANGE","task","cancel","fork","USERS_FETCHING_STARTED","usersPage","selectedNationalities","keys","call","cache","USERS_FETCHING_SUCCESS","USERS_FETCHING_ERROR","usersCache","cacheState","shouldSaveCache","allEffects","USERS_SHOW_MORE","all","BOTTOM_REACHED","race","INITIALIZE_REQUEST","initialize","initialState","loading","processing","modalUser","appReducer","slice","MODAL_OPENED","MODAL_CLOSED","useSearchContainer","dispatch","useDispatch","disabled","useSelector","searchText","foundUsers","showResults","doSetSearchText","text","searchTextChange","useModalContainer","doOpenModal","useCallback","openModal","doCloseModal","useUsersContainer","hasMore","useEffect","doRequestMore","CommonSnackbar","action","message","open","severity","props","Snackbar","Alert","variant","ErrorSnackbar","Button","color","size","onClick","window","location","reload","InfoSnackbar","useStyles","makeStyles","theme","root","maxWidth","media","height","breakpoints","up","UsersGridLayoutItem","memo","onOpenModal","classes","useMemo","Card","className","CardActionArea","CardMedia","image","picture","large","title","CardContent","Typography","gutterBottom","component","Grid","container","justify","alignItems","item","xs","md","zeroMinWidth","noWrap","login","username","email","prevProps","nextProps","UsersGridLayout","direction","spacing","key","id","value","sm","lg","UsersGridLayoutMessage","margin","catalogEnd","marginTop","UsersGridInfinite","hideView","onLoadMore","scrollDisplayStyle","display","style","loadMore","threshold","padding","messageEmpty","UsersGridSearched","show","scrollToTop","scroll","shouldShowNoResultMessage","Box","UserModalContentTypography","UserModalContentTypographyGrid","IconComponent","CustomContent","content","UserModalContentInfo","fullNameWithTitle","phone","cell","street","number","postcode","city","country","UserModalContentMedia","photoTitle","card","borderRadius","UserModalContent","UserModal","onCloseModal","isOpen","Dialog","fullWidth","onClose","aria-labelledby","DialogTitle","MainPage","loadingError","loadingUsers","processingSearch","showSearchResults","useNationalitiesContainer","doToggleNationality","NationalitySwitch","checked","handleChange","label","charAt","toUpperCase","substring","FormControlLabel","control","Switch","onChange","NationalitySwitchGroup","onToggleNationality","event","target","styleHelperText","FormControl","FormLabel","FormGroup","nationalityName","FormHelperText","textWrapper","marginBottom","switchesWrapper","SettingsPage","NotFoundPage","ROUTES","Routes","path","exact","useMenu","useState","anchorEl","setAnchorEl","handleClose","handleOpen","currentTarget","TopBarMenu","originPositionObj","vertical","horizontal","anchorOrigin","keepMounted","transformOrigin","MenuItem","Link","to","position","shape","backgroundColor","fade","palette","common","white","marginRight","marginLeft","width","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","TopBarSearch","onTextChange","InputBase","input","inputProps","placeholder","TopBar","searchDisabled","onSearchChange","showSearch","useLocation","pathname","AppBar","Toolbar","IconButton","edge","aria-label","Hidden","only","makeReducers","combineReducers","sagaMiddleware","createSagaMiddleware","makeMiddlewares","middlewares","startRootSaga","run","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","makeStore","ConnectedTopBar","App","styleHelper","basename","CssBaseline","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.55f582bc.chunk.js","sourcesContent":["const MODULE_NAME = 'APP';\r\n\r\nconst ACTION_TYPES = {\r\n  'INITIALIZE_REQUEST': `${MODULE_NAME}/INITIALIZE_REQUEST`,\r\n  'BOTTOM_REACHED': `${MODULE_NAME}/BOTTOM_REACHED`,\r\n  'MODAL_OPENED': `${MODULE_NAME}/MODAL_OPENED`,\r\n  'MODAL_CLOSED': `${MODULE_NAME}/MODAL_CLOSED`,\r\n  'NATIONALITY_TOGGLE': `${MODULE_NAME}/NATIONALITY_TOGGLE`,\r\n  'NATIONALITY_SET': `${MODULE_NAME}/NATIONALITY_SET`,\r\n  'SEARCH_TEXT_APPLY_STARTED': `${MODULE_NAME}/SEARCH_TEXT_APPLY_STARTED`,\r\n  'SEARCH_TEXT_APPLY_SUCCESS': `${MODULE_NAME}/SEARCH_TEXT_APPLY_SUCCESS`,\r\n  'SEARCH_TEXT_CHANGE': `${MODULE_NAME}/SEARCH_TEXT_CHANGE`,\r\n  'SEARCH_TEXT_SET': `${MODULE_NAME}/SEARCH_TEXT_SET`,\r\n  'USERS_FETCHING_STARTED': `${MODULE_NAME}/USERS_FETCHING_STARTED`,\r\n  'USERS_FETCHING_ERROR': `${MODULE_NAME}/USERS_FETCHING_ERROR`,\r\n  'USERS_FETCHING_SUCCESS': `${MODULE_NAME}/USERS_FETCHING_SUCCESS`,\r\n  'USERS_SHOW_MORE': `${MODULE_NAME}/USERS_SHOW_MORE`,\r\n};\r\n\r\nconst CONSTANTS = {\r\n  SEARCH_DELAY_MS: 500,\r\n  USERS_PER_TICK: 50,\r\n  USERS_MAX_COUNT: 200\r\n};\r\n\r\nexport { ACTION_TYPES, CONSTANTS };\r\n","/**\r\n * The API URL address.\r\n * @constant\r\n *\r\n * @type {string}\r\n */\r\nexport const API_URL = 'https://randomuser.me/api/';\r\n\r\n/**\r\n * Default keys, which should be taken from api result's user entity.\r\n * @constant\r\n *\r\n * @type {array<string>}\r\n */\r\nexport const API_PICK_ONLY_KEYS = [\r\n  'name',\r\n  'location',\r\n  'email',\r\n  'login',\r\n  'phone',\r\n  'cell',\r\n  'id',\r\n  'picture',\r\n  'nat'\r\n];\r\n\r\n/**\r\n * Default count of users to fetch.\r\n * @constant\r\n *\r\n * @type {number}\r\n */\r\nexport const DEFAULT_USERS_COUNT = 1;\r\n\r\n/**\r\n * Language code mappings.\r\n * @constant\r\n *\r\n * @type {object}\r\n */\r\nexport const LANGUAGE_CODES = {\r\n  british: 'GB',\r\n  french: 'FR',\r\n  spanish: 'ES',\r\n  swiss: 'CH'\r\n};\r\n\r\n/**\r\n * Default seed string used to make api results consistent\r\n * @constant\r\n *\r\n * @type {string}\r\n */\r\nexport const SEED_STRING = 's3c0nDD';","import axios from 'axios';\r\n\r\nimport {\r\n  API_URL,\r\n  API_PICK_ONLY_KEYS,\r\n  DEFAULT_USERS_COUNT,\r\n  LANGUAGE_CODES,\r\n  SEED_STRING\r\n} from './api.config';\r\n\r\n/**\r\n * Call API endpoint to get users.\r\n * @async\r\n *\r\n * @param {array} [nationalities] list of nationalities of fetched users\r\n * @param {number} [page] page to be fetched when used with seed\r\n * @param {string} [seed=CONFIG.SEED_STRING]\r\n * @param {array<string>} [takeKeys=CONFIG.API_PICK_ONLY_KEYS] list of keys to take from user entity\r\n * @param {number} [usersCount=CONFIG.DEFAULT_USERS_COUNT] users count to fetch\r\n *\r\n * @returns {Promise<Array>} promise of fetched users\r\n */\r\nexport const getUsers = ({\r\n  nationalities = [],\r\n  page,\r\n  seed = SEED_STRING,\r\n  takeKeys = API_PICK_ONLY_KEYS,\r\n  usersCount = DEFAULT_USERS_COUNT,\r\n} = {}) => {\r\n  const nationalitiesCodes = nationalities.map((name) => {\r\n    const mapping = LANGUAGE_CODES[name];\r\n    !mapping && console.warn('No API mapping for nationality:', name);\r\n    return mapping;\r\n  });\r\n\r\n  const nationsQueryParam = nationalitiesCodes?.filter(Boolean).join(',');\r\n\r\n  return axios.get(API_URL, {\r\n    params: {\r\n      ...(takeKeys && { inc: takeKeys.join(',') }),\r\n      ...(usersCount && { results: usersCount }),\r\n      ...(nationsQueryParam && { nat: nationsQueryParam }),\r\n      ...(seed && { seed, page })\r\n    }\r\n  })\r\n    .then(response => {\r\n      return response.data?.results\r\n    })\r\n    .catch(error => {\r\n      return Promise.reject(error);\r\n    })\r\n};","import {\r\n  all,\r\n  call,\r\n  cancel,\r\n  delay,\r\n  fork,\r\n  put,\r\n  race,\r\n  select,\r\n  take,\r\n  takeEvery\r\n} from 'redux-saga/effects';\r\n\r\nimport { ACTION_TYPES, CONSTANTS } from './constants';\r\nimport { getUsers } from '../../services/api.service';\r\n\r\nexport function* toggleNationalityFlow({ payload }) {\r\n  const nationalities = yield select(state => state.app.nationalities);\r\n  const isClickedCurrentlyOff = !nationalities[payload];\r\n  const selectedCount = Object.values(nationalities).filter(Boolean).length;\r\n\r\n  if (isClickedCurrentlyOff || selectedCount > 1) {\r\n    yield put({\r\n      type: ACTION_TYPES.NATIONALITY_SET,\r\n      payload: payload\r\n    });\r\n  }\r\n}\r\n\r\nexport function* watchNationalityClick() {\r\n  yield takeEvery(ACTION_TYPES.NATIONALITY_TOGGLE, toggleNationalityFlow);\r\n}\r\n\r\nexport function* searchTextChangeFlow(payload) {\r\n  yield put({\r\n    type: ACTION_TYPES.SEARCH_TEXT_SET,\r\n    payload\r\n  });\r\n  yield put({\r\n    type: ACTION_TYPES.SEARCH_TEXT_APPLY_STARTED,\r\n  });\r\n  if (!!payload?.length)  {\r\n    yield delay(CONSTANTS.SEARCH_DELAY_MS);\r\n  }\r\n\r\n\r\n  const usersState = yield select(state => state.app.users);\r\n  const searchString = yield select(state => state.app.search.searchString);\r\n\r\n  const usersVisible = usersState.filter((user) => {\r\n    const fullName = `${user?.name.first} ${user?.name.last}`?.toLowerCase();\r\n    const testString = searchString?.toLowerCase();\r\n    return fullName?.includes(testString)\r\n  });\r\n\r\n  const searchedUsers = !!searchString?.length ? usersVisible : [];\r\n\r\n  yield put({\r\n    type: ACTION_TYPES.SEARCH_TEXT_APPLY_SUCCESS,\r\n    payload: searchedUsers\r\n  });\r\n}\r\n\r\nexport function* watchSearchTextChange() {\r\n  let task;\r\n  while (true) {\r\n    const { payload } = yield take(ACTION_TYPES.SEARCH_TEXT_CHANGE);\r\n    if (task) {\r\n      yield cancel(task);\r\n    }\r\n    task = yield fork(searchTextChangeFlow, payload);\r\n  }\r\n}\r\n\r\nexport function* fetchUsers() {\r\n  yield put({\r\n    type: ACTION_TYPES.USERS_FETCHING_STARTED\r\n  });\r\n\r\n  const page = yield select(state => state.app.usersPage);\r\n  const nationalities = yield select(state => state.app.nationalities);\r\n  const selectedNationalities = Object.keys(nationalities)\r\n    .filter((name) => nationalities[name]);\r\n\r\n  try {\r\n    const cache = yield call(getUsers ,{\r\n      usersCount: CONSTANTS.USERS_PER_TICK,\r\n      nationalities: selectedNationalities,\r\n      page\r\n    });\r\n\r\n    yield put({\r\n      type: ACTION_TYPES.USERS_FETCHING_SUCCESS,\r\n      payload: cache\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTION_TYPES.USERS_FETCHING_ERROR,\r\n      payload: error\r\n    });\r\n  }\r\n}\r\n\r\nexport function* bottomReachedFlow() {\r\n  const usersState = yield select(state => state.app.users);\r\n  const cacheState = yield select(state => state.app.usersCache);\r\n  const shouldSaveCache = (usersState?.length + cacheState?.length) < CONSTANTS.USERS_MAX_COUNT;\r\n\r\n  const allEffects = [\r\n    ...(shouldSaveCache ? [fork(fetchUsers)] : []),\r\n    put({\r\n      type: ACTION_TYPES.USERS_SHOW_MORE\r\n    }),\r\n    ...(!shouldSaveCache ? [put({\r\n        type: ACTION_TYPES.USERS_FETCHING_SUCCESS,\r\n        payload: []\r\n      })] : [])\r\n  ];\r\n\r\n  yield all(allEffects);\r\n}\r\n\r\nexport function* watchBottomReached() {\r\n  while (true) {\r\n    yield all([\r\n      take(ACTION_TYPES.USERS_FETCHING_SUCCESS),\r\n      take(ACTION_TYPES.BOTTOM_REACHED)\r\n    ]);\r\n    yield fork(bottomReachedFlow);\r\n  }\r\n}\r\n\r\nexport function* watchInitialize() {\r\n  while (true) {\r\n    const [initialize, nationalitySet] = yield race([\r\n      take(ACTION_TYPES.INITIALIZE_REQUEST),\r\n      take(ACTION_TYPES.NATIONALITY_SET)\r\n    ]);\r\n    if (nationalitySet) { return }\r\n    if (initialize) {\r\n      const users = yield select(state => state.app.users);\r\n      const usersCache = yield select(state => state.app.usersCache);\r\n      if (!users.length && !usersCache.length) {\r\n        yield fork(fetchUsers);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchInitialize(),\r\n    watchBottomReached(),\r\n    watchNationalityClick(),\r\n    watchSearchTextChange()\r\n  ]);\r\n}","import { ACTION_TYPES, CONSTANTS } from './constants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  users: [],\r\n  usersPage: 1,\r\n  usersCache: [],\r\n  search: {\r\n    users: [],\r\n    processing: false,\r\n    searchString: ''\r\n  },\r\n  modalUser: null,\r\n  nationalities: {\r\n    swiss: true,\r\n    spanish: true,\r\n    french: true,\r\n    british: true\r\n  }\r\n};\r\n\r\nconst appReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ACTION_TYPES.USERS_SHOW_MORE:\r\n      return {\r\n        ...state,\r\n        users: [\r\n          ...state.users,\r\n          ...state.usersCache.slice(0, CONSTANTS.USERS_PER_TICK)\r\n        ],\r\n        usersCache: [\r\n          ...state.usersCache.slice(CONSTANTS.USERS_PER_TICK)\r\n        ]\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: initialState.error\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        usersCache: payload,\r\n        usersPage: state.usersPage + 1\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_ERROR:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: payload\r\n        };\r\n\r\n\r\n    case ACTION_TYPES.MODAL_OPENED:\r\n      return {\r\n        ...state,\r\n        modalUser: payload\r\n      };\r\n\r\n    case ACTION_TYPES.MODAL_CLOSED:\r\n      return {\r\n        ...state,\r\n        modalUser: null\r\n      };\r\n\r\n    case ACTION_TYPES.SEARCH_TEXT_SET:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          searchString: payload\r\n        }\r\n      };\r\n\r\n    case ACTION_TYPES.SEARCH_TEXT_APPLY_STARTED:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          processing: true\r\n        }\r\n      };\r\n\r\n    case ACTION_TYPES.SEARCH_TEXT_APPLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          processing: false,\r\n          users: payload\r\n        }\r\n      };\r\n\r\n    case ACTION_TYPES.NATIONALITY_SET:\r\n      return {\r\n        ...state,\r\n        loading: initialState.loading,\r\n        users: initialState.users,\r\n        usersCache: initialState.usersCache,\r\n        usersPage: initialState.usersPage,\r\n        search: initialState.search,\r\n        modalUser: initialState.modalUser,\r\n        nationalities: {\r\n          ...state.nationalities,\r\n          [payload]: !state.nationalities[payload]\r\n        }\r\n      };\r\n\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { searchTextChange } from '../store/module';\r\n\r\nconst useSearchContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const disabled = useSelector(state => state.app.loading);\r\n  const processing = useSelector(state => state.app.search.processing);\r\n  const searchText = useSelector(state => state.app.search.searchString);\r\n  const foundUsers = useSelector(state => state.app.search.users);\r\n  const showResults = (!!foundUsers?.length || !!searchText.length);\r\n\r\n  const doSetSearchText = (text) => {\r\n    dispatch(searchTextChange(text))\r\n  };\r\n\r\n  return { foundUsers, disabled, processing, searchText, showResults, doSetSearchText }\r\n};\r\n\r\nexport default useSearchContainer;","import { ACTION_TYPES } from './constants';\r\n\r\nexport const initializeUsers = () => ({\r\n  type: ACTION_TYPES.INITIALIZE_REQUEST\r\n});\r\n\r\nexport const bottomReached = () => ({\r\n  type: ACTION_TYPES.BOTTOM_REACHED\r\n});\r\n\r\nexport const openModal = (user) => ({\r\n  type: ACTION_TYPES.MODAL_OPENED,\r\n  payload: user\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: ACTION_TYPES.MODAL_CLOSED\r\n});\r\n\r\nexport const searchTextChange = (text) => ({\r\n  type: ACTION_TYPES.SEARCH_TEXT_CHANGE,\r\n  payload: text\r\n});\r\n\r\nexport const toggleNationality = (nationalityName) => ({\r\n  type: ACTION_TYPES.NATIONALITY_TOGGLE,\r\n  payload: nationalityName\r\n});\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { openModal, closeModal } from '../store/module';\r\nimport { useCallback } from 'react';\r\n\r\nconst useModalContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(state => state.app.modalUser);\r\n\r\n  const doOpenModal = useCallback((user) => {\r\n    dispatch(openModal(user))\r\n  }, [dispatch]);\r\n  const doCloseModal = useCallback(() => {\r\n    dispatch(closeModal());\r\n  }, [dispatch]);\r\n\r\n  return { user, doOpenModal, doCloseModal }\r\n};\r\n\r\nexport default useModalContainer;","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  CONSTANTS,\r\n  bottomReached,\r\n  initializeUsers\r\n} from '../store/module';\r\n\r\nconst useUsersContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const users = useSelector(state => state.app.users);\r\n  const loading = useSelector(state => state.app.loading);\r\n  const error = useSelector(state => state.app.error);\r\n  const hasMore = (users?.length < CONSTANTS.USERS_MAX_COUNT);\r\n\r\n  const doRequestMore = () => {\r\n    dispatch(bottomReached());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialize = () => {\r\n      dispatch(initializeUsers());\r\n    };\r\n    initialize();\r\n  }, [dispatch]);\r\n\r\n  return { doRequestMore, error, hasMore, loading, users }\r\n};\r\n\r\nexport default useUsersContainer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst CommonSnackbar = ({ action, message, open, severity, ...props }) => {\r\n  return (\r\n    <Snackbar\r\n      {...props}\r\n      open={open}\r\n    >\r\n      <Alert\r\n        variant=\"filled\"\r\n        severity={severity}\r\n        action={action}\r\n      >\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n};\r\n\r\nexport default CommonSnackbar;\r\n\r\nCommonSnackbar.propTypes = {\r\n  action: PropTypes.element,\r\n  message: PropTypes.string.isRequired,\r\n  open: PropTypes.bool,\r\n  severity: PropTypes.oneOf(['success', 'error', 'info', 'warning']),\r\n  props: PropTypes.arrayOf(PropTypes.any)\r\n};","import ErrorSnackbar from './ErrorSnackbar';\r\n\r\nexport default ErrorSnackbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport CommonSnackbar from '../CommonSnackbar';\r\n\r\nconst ErrorSnackbar = ({ open }) => {\r\n  const doReload = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <CommonSnackbar\r\n      action={\r\n        <Button\r\n          color=\"inherit\"\r\n          variant=\"outlined\"\r\n          size=\"medium\"\r\n          onClick={doReload}\r\n        >\r\n          Reload app\r\n        </Button>\r\n      }\r\n      open={open}\r\n      message=\"Error occurred, please click button to reload app\"\r\n      severity=\"error\"\r\n    />\r\n  )\r\n};\r\n\r\nexport default ErrorSnackbar;\r\n\r\nErrorSnackbar.propTypes = {\r\n  open: PropTypes.bool\r\n};","import InfoSnackbar from './InfoSnackbar'\r\n\r\nexport default InfoSnackbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CommonSnackbar from '../CommonSnackbar';\r\n\r\nconst InfoSnackbar = ({ message, open }) => {\r\n  return (\r\n    <CommonSnackbar\r\n      open={open}\r\n      message={message}\r\n      severity=\"info\"\r\n    />\r\n  )\r\n};\r\n\r\nexport default InfoSnackbar;\r\n\r\nInfoSnackbar.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n  open: PropTypes.bool\r\n};","import React, { useMemo, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    maxWidth: 260\r\n  },\r\n  media: {\r\n    height: 80,\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 100,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      height: 120,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      height: 150,\r\n    }\r\n  }\r\n}));\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.user === nextProps.user;\r\n};\r\n\r\nconst UsersGridLayoutItem = memo(({ user, onOpenModal }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {\r\n    onOpenModal(user);\r\n  };\r\n\r\n  const fullName = useMemo(() => (\r\n    `${user.name.first} ${user.name.last}`\r\n  ), [user]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea\r\n        onClick={handleClick}\r\n      >\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={user.picture.large}\r\n          title={`${fullName} face photo`}\r\n        />\r\n        <CardContent>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n          >\r\n            {fullName}\r\n          </Typography>\r\n\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"stretch\"\r\n          >\r\n            <Grid item xs={3} md={2}>\r\n              <PersonIcon color=\"primary\" />\r\n            </Grid>\r\n            <Grid item xs={9} md={10} zeroMinWidth>\r\n              <Typography\r\n                noWrap\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n              >\r\n                {user.login.username}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs={3} md={2}>\r\n              <EmailIcon color=\"primary\" />\r\n            </Grid>\r\n            <Grid item xs={9} md={10} zeroMinWidth>\r\n              <Typography\r\n                noWrap\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n              >\r\n                {user.email}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UsersGridLayoutItem;\r\n\r\nUsersGridLayoutItem.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.shape({\r\n      first: PropTypes.string.isRequired,\r\n      last: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    picture: PropTypes.shape({\r\n      large: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    login: PropTypes.shape({\r\n      username: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    email: PropTypes.string.isRequired\r\n  }).isRequired,\r\n  onOpenModal: PropTypes.func.isRequired\r\n};","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport UsersGridLayoutItem from './UsersGridLayoutItem';\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.users === nextProps.users;\r\n};\r\n\r\nconst UsersGridLayout = memo(({ users, onOpenModal }) => {\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={4}\r\n    >\r\n      {users?.map((user) => (\r\n        <Grid\r\n          item\r\n          key={user.id.value}\r\n          xs={6}\r\n          sm={4}\r\n          md={3}\r\n          lg={2}\r\n        >\r\n          <UsersGridLayoutItem\r\n            user={user}\r\n            onOpenModal={onOpenModal}\r\n          />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UsersGridLayout;\r\n\r\nUsersGridLayout.propTypes = {\r\n  users: PropTypes.array.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired\r\n};","import React  from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst UsersGridLayoutMessage = ({ className, message }) => {\r\n  return (\r\n    <Grid\r\n      className={className}\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      spacing={4}\r\n    >\r\n      <Grid item>\r\n        <Typography\r\n          variant=\"h4\"\r\n          color=\"textSecondary\"\r\n        >\r\n          {message}\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UsersGridLayoutMessage;\r\n\r\nUsersGridLayoutMessage.propTypes = {\r\n  className: PropTypes.any,\r\n  message: PropTypes.string.isRequired\r\n};","import UsersGridLayout from './UsersGridLayout';\r\nimport UsersGridLayoutMessage from './UsersGridLayoutMessage';\r\n\r\nexport default UsersGridLayout;\r\n\r\nexport {\r\n  UsersGridLayoutMessage\r\n}","import React, { useMemo, memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport UsersGridLayout, { UsersGridLayoutMessage } from '../UsersGridLayout';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(4)\r\n  },\r\n  catalogEnd: {\r\n    marginTop: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.users === nextProps.users\r\n    && prevProps.hideView === nextProps.hideView;\r\n};\r\n\r\nconst UsersGridInfinite = memo(({\r\n  hasMore,\r\n  users,\r\n  hideView,\r\n  onOpenModal,\r\n  onLoadMore\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const scrollDisplayStyle = useMemo(\r\n    () => (hideView ? { display: 'none' } : {}),\r\n    [hideView]\r\n  );\r\n\r\n  return (\r\n    <InfiniteScroll\r\n      className={classes.root}\r\n      style={scrollDisplayStyle}\r\n      loadMore={onLoadMore}\r\n      hasMore={hasMore}\r\n      threshold={500}\r\n    >\r\n      <UsersGridLayout\r\n        users={users}\r\n        onOpenModal={onOpenModal}\r\n      />\r\n      {!hasMore && <UsersGridLayoutMessage\r\n        className={classes.catalogEnd}\r\n        message={'End of users catalog'}\r\n      />}\r\n    </InfiniteScroll>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UsersGridInfinite;\r\n\r\nUsersGridInfinite.propTypes = {\r\n  hasMore: PropTypes.bool,\r\n  users: PropTypes.array.isRequired,\r\n  hideView: PropTypes.bool,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n  onLoadMore: PropTypes.func.isRequired\r\n};","import UsersGridInfinite from './UsersGridInfinite';\r\n\r\nexport default UsersGridInfinite;","import React, { memo, useCallback, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport UsersGridLayout from '../UsersGridLayout/UsersGridLayout';\r\nimport UsersGridLayoutMessage from '../UsersGridLayout/UsersGridLayoutMessage';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: `0 ${theme.spacing(4)}px`\r\n  },\r\n  messageEmpty: {\r\n    marginTop: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.users === nextProps.users\r\n    && prevProps.show === nextProps.show\r\n    && prevProps.processing === nextProps.processing;\r\n};\r\n\r\nconst UsersGridSearched = memo(({ processing, show, users, onOpenModal, ...props }) => {\r\n  const classes = useStyles();\r\n\r\n  const scrollToTop = useCallback(() => {\r\n    window.scroll(0,0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, [users, scrollToTop]);\r\n\r\n  const shouldShowNoResultMessage = (!users?.length && !processing);\r\n\r\n  return (\r\n    <>\r\n      {show && (\r\n        <Box\r\n          className={classes.root}\r\n          {...props}\r\n        >\r\n          <UsersGridLayout\r\n            users={users}\r\n            onOpenModal={onOpenModal}\r\n          />\r\n          {shouldShowNoResultMessage && (\r\n            <UsersGridLayoutMessage\r\n              className={classes.messageEmpty}\r\n              message={'No matching results'}\r\n            />\r\n          )}\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UsersGridSearched;\r\n\r\nUsersGridSearched.propTypes = {\r\n  processing: PropTypes.bool.isRequired,\r\n  show: PropTypes.bool,\r\n  users: PropTypes.array.isRequired,\r\n  onOpenModal: PropTypes.func.isRequired,\r\n  props: PropTypes.arrayOf(PropTypes.any)\r\n};","import UsersGridSearched from './UsersGridSearched';\r\n\r\nexport default UsersGridSearched;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst UserModalContentTypography = ({ text }) => (\r\n  <Typography\r\n    variant=\"body2\"\r\n    color=\"textSecondary\"\r\n    component=\"p\"\r\n  >\r\n    {text}\r\n  </Typography>\r\n);\r\n\r\nconst UserModalContentTypographyGrid = ({ IconComponent, CustomContent, text, ...props }) => {\r\n  return (\r\n    <Grid container {...props}>\r\n      <Grid item xs={2}>\r\n        { IconComponent }\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        {text\r\n          ? <UserModalContentTypography text={text} />\r\n          : CustomContent\r\n        }\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserModalContentTypographyGrid;\r\n\r\nexport {\r\n  UserModalContentTypography\r\n}\r\n\r\nUserModalContentTypographyGrid.propTypes = {\r\n  IconComponent: PropTypes.element.isRequired,\r\n  CustomContent: PropTypes.element,\r\n  text: PropTypes.string,\r\n  props: PropTypes.arrayOf(PropTypes.any)\r\n};\r\n\r\nUserModalContentTypography.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\n\r\nimport UserModalContentTypographyGrid, {\r\n  UserModalContentTypography\r\n} from './UserModalContentTypographyGrid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: {\r\n    margin: theme.spacing(1),\r\n    [theme.breakpoints.up('sm')]: {\r\n      margin: theme.spacing(2),\r\n    },\r\n  }\r\n}));\r\n\r\nconst UserModalContentInfo = ({ user }) => {\r\n  const classes = useStyles();\r\n\r\n  const fullNameWithTitle = useMemo(() => (\r\n    `${user.name.title} ${user.name.first} ${user.name.last}`\r\n  ), [user]);\r\n\r\n  return (\r\n    <CardContent className={classes.content}>\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h4\"\r\n        component=\"h2\"\r\n      >\r\n        {fullNameWithTitle}\r\n      </Typography>\r\n\r\n      <UserModalContentTypographyGrid\r\n        IconComponent={<PersonIcon color=\"primary\"/>}\r\n        text={user.login.username}\r\n      />\r\n\r\n      <UserModalContentTypographyGrid\r\n        IconComponent={<EmailIcon color=\"primary\"/>}\r\n        text={user.email}\r\n      />\r\n\r\n      <UserModalContentTypographyGrid\r\n        IconComponent={<PhoneIcon color=\"primary\"/>}\r\n        text={user.phone}\r\n      />\r\n\r\n      <UserModalContentTypographyGrid\r\n        IconComponent={<PhoneAndroidIcon color=\"primary\"/>}\r\n        text={user.cell}\r\n      />\r\n\r\n      <UserModalContentTypographyGrid\r\n        alignItems=\"center\"\r\n        IconComponent={<HomeIcon color=\"primary\"/>}\r\n        CustomContent={\r\n          <Grid\r\n            container\r\n            direction=\"column\"\r\n          >\r\n            <Grid item xs>\r\n              <UserModalContentTypography\r\n                text={`${user.location.street.name} ${user.location.street.number}`}\r\n              />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <UserModalContentTypography\r\n                text={`${user.location.postcode} ${user.location.city} `}\r\n              />\r\n            </Grid>\r\n            <Grid item xs>\r\n              <UserModalContentTypography\r\n                text={`${user.location.state} / ${user.location.country}`}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        }\r\n      />\r\n    </CardContent>\r\n  );\r\n};\r\n\r\nexport default UserModalContentInfo;\r\n\r\nUserModalContentInfo.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      first: PropTypes.string.isRequired,\r\n      last: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    login: PropTypes.shape({\r\n      username: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    phone: PropTypes.string.isRequired,\r\n    cell: PropTypes.string.isRequired,\r\n    location: PropTypes.shape({\r\n      street: PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.number.isRequired\r\n      }).isRequired,\r\n      postcode: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n      ]).isRequired,\r\n      city: PropTypes.string.isRequired,\r\n      state: PropTypes.string.isRequired,\r\n      country: PropTypes.string.isRequired\r\n    }).isRequired,\r\n  }).isRequired\r\n};","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  media: {\r\n    height: 200,\r\n    [theme.breakpoints.up('sm')]: {\r\n      height: 260,\r\n    },\r\n    [theme.breakpoints.up('md')]: {\r\n      height: 300,\r\n    },\r\n    [theme.breakpoints.up('lg')]: {\r\n      height: 340,\r\n    }\r\n  }\r\n}));\r\n\r\nconst UserModalContentMedia = ({ user }) => {\r\n  const classes = useStyles();\r\n\r\n  const photoTitle = useMemo(() => (\r\n    `${user.name.title} ${user.name.first} ${user.name.last} photo`\r\n  ), [user]);\r\n\r\n  return (\r\n    <CardMedia\r\n      className={classes.media}\r\n      image={user.picture.large}\r\n      title={photoTitle}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserModalContentMedia;\r\n\r\nUserModalContentMedia.propTypes = {\r\n  user: PropTypes.shape({\r\n    name: PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      first: PropTypes.string.isRequired,\r\n      last: PropTypes.string.isRequired\r\n    }).isRequired,\r\n    picture: PropTypes.shape({\r\n      large: PropTypes.string.isRequired\r\n    }).isRequired,\r\n  }).isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from '@material-ui/core/Card';\r\n\r\nimport UserModalContentInfo from './UserModalContentInfo';\r\nimport UserModalContentMedia from './UserModalContentMedia';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    borderRadius: 0\r\n  }\r\n});\r\n\r\nconst UserModalContent = ({ user }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <UserModalContentMedia\r\n        user={user}\r\n      />\r\n      <UserModalContentInfo\r\n        user={user}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserModalContent;\r\n\r\nUserModalContent.propTypes = {\r\n  user: PropTypes.object.isRequired\r\n};","import UserModalContent from './UserModalContent';\r\n\r\nexport default UserModalContent;","import UserModal from './UserModal';\r\n\r\nexport default UserModal;","import React, { memo, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport UserModalContent from './UserModalContent';\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.user === nextProps.user;\r\n};\r\n\r\nconst UserModal = memo(({ user, onCloseModal }) => {\r\n  const isOpen = useMemo(() => Boolean(user), [user]);\r\n\r\n  if (!user) { return null; }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      onClose={onCloseModal}\r\n      aria-labelledby=\"user-dialog-title\"\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id=\"user-dialog-title\">\r\n        Details\r\n      </DialogTitle>\r\n\r\n      <UserModalContent\r\n        user={user}\r\n      />\r\n    </Dialog>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UserModal;\r\n\r\nUserModal.propTypes = {\r\n  user: PropTypes.object,\r\n  onCloseModal: PropTypes.func.isRequired\r\n};","import MainPage from './MainPage';\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nimport useModalContainer from '../../hooks/useModalContainer';\r\nimport useSearchContainer from '../../hooks/useSearchContainer';\r\nimport useUsersContainer from '../../hooks/useUsersContainer';\r\n\r\nimport ErrorSnackbar from '../../components/Snackbars/ErrorSnackbar';\r\nimport InfoSnackbar from '../../components/Snackbars/InfoSnackbar';\r\nimport UsersGridInfinite from '../../components/UsersGrids/UsersGridInfinite';\r\nimport UsersGridSearched from '../../components/UsersGrids/UsersGridSearched';\r\nimport UserModal from '../../components/UserModal';\r\n\r\nconst MainPage = () => {\r\n  const { user: modalUser, doOpenModal, doCloseModal } = useModalContainer();\r\n  const { error: loadingError, hasMore, loading: loadingUsers, users, doRequestMore } = useUsersContainer();\r\n  const { processing: processingSearch, foundUsers, showResults: showSearchResults} = useSearchContainer();\r\n\r\n  return (\r\n    <>\r\n      <ErrorSnackbar\r\n        open={!!loadingError}\r\n      />\r\n      <InfoSnackbar\r\n        open={loadingUsers}\r\n        message={'Loading ... '}\r\n      />\r\n      <InfoSnackbar\r\n        open={processingSearch}\r\n        message={'Searching ... '}\r\n      />\r\n      <UserModal\r\n        user={modalUser}\r\n        onCloseModal={doCloseModal}\r\n      />\r\n      <UsersGridSearched\r\n        processing={processingSearch}\r\n        show={showSearchResults}\r\n        users={foundUsers}\r\n        onOpenModal={doOpenModal}\r\n      />\r\n      <UsersGridInfinite\r\n        hasMore={hasMore}\r\n        hideView={showSearchResults}\r\n        users={users}\r\n        onLoadMore={doRequestMore}\r\n        onOpenModal={doOpenModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { toggleNationality } from '../store/module';\r\n\r\nconst useNationalitiesContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const nationalities = useSelector(state => state.app.nationalities);\r\n\r\n  const doToggleNationality = (name) => dispatch(toggleNationality(name));\r\n\r\n  return { nationalities, doToggleNationality }\r\n};\r\n\r\nexport default useNationalitiesContainer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst NationalitySwitch = ({ checked, handleChange, name }) => {\r\n  const label = name.charAt(0).toUpperCase() + name.substring(1);\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Switch\r\n          checked={checked}\r\n          onChange={handleChange}\r\n          name={name}\r\n        />\r\n      }\r\n      label={label}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NationalitySwitch;\r\n\r\nNationalitySwitch.propTypes = {\r\n  checked: PropTypes.bool.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};","import NationalitySwitchGroup from './NationalitySwitchGroup';\r\n\r\nexport default NationalitySwitchGroup;","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport NationalitySwitch from './NationalitySwitch';\r\n\r\nconst NationalitySwitchGroup = ({ nationalities, onToggleNationality }) => {\r\n  const handleChange = (event) => {\r\n    onToggleNationality(event.target.name);\r\n  };\r\n\r\n  const styleHelperText = useMemo(() => ({ maxWidth: 400 }), []);\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">\r\n        Select nationalities\r\n      </FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(nationalities).map((nationalityName) => (\r\n          <NationalitySwitch\r\n            key={nationalityName}\r\n            checked={nationalities[nationalityName]}\r\n            handleChange={handleChange}\r\n            name={nationalityName}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n      <FormHelperText\r\n        style={styleHelperText}\r\n      >\r\n        Please choose at least 1 nationality.\r\n        Remember that if you toggle any switch, all\r\n        previously loaded data on main page will be removed.\r\n      </FormHelperText>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default NationalitySwitchGroup;\r\n\r\nNationalitySwitchGroup.propTypes = {\r\n  nationalities: PropTypes.objectOf(PropTypes.bool).isRequired,\r\n  onToggleNationality: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNationalitiesContainer from '../../hooks/useNationalitiesContainer';\r\nimport NationalitySwitchGroup from '../../components/NationalitySwitchGroup';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  textWrapper: {\r\n    marginTop: 20,\r\n    marginBottom: 40\r\n  },\r\n  switchesWrapper: {\r\n    margin: `0 ${theme.spacing(4)}px`\r\n  }\r\n}));\r\n\r\nconst SettingsPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const { nationalities, doToggleNationality } = useNationalitiesContainer();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid\r\n        className={classes.textWrapper}\r\n        item\r\n      >\r\n        <Typography\r\n          variant=\"h5\"\r\n          color=\"inherit\"\r\n        >\r\n          Settings\r\n        </Typography>\r\n      </Grid>\r\n      <Grid\r\n        className={classes.switchesWrapper}\r\n        item\r\n      >\r\n        <NationalitySwitchGroup\r\n          nationalities={nationalities}\r\n          onToggleNationality={doToggleNationality}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import SettingsPage from './SettingsPage';\r\n\r\nexport default SettingsPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: 200,\r\n  },\r\n  text: {\r\n    margin: '0 30px'\r\n  }\r\n});\r\n\r\nconst UsersGrid = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.root}\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item>\r\n        <Typography\r\n          className={classes.text}\r\n          variant=\"h4\"\r\n          color=\"textSecondary\"\r\n        >\r\n          404 Page Not Found :(\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UsersGrid;\r\n","import NotFoundPage from './NotFoundPage';\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport MainPage from './pages/MainPage';\r\nimport SettingsPage from './pages/SettingsPage';\r\nimport NotFoundPage from './pages/NotFoundPage';\r\n\r\nexport const ROUTES = {\r\n  root: '/',\r\n  settings: '/settings'\r\n};\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        path={ROUTES.root}\r\n        component={MainPage}\r\n        exact\r\n      />\r\n      <Route\r\n        path={ROUTES.settings}\r\n        component={SettingsPage}\r\n      />\r\n      <Route\r\n        component={NotFoundPage}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { useState } from 'react';\r\n\r\nconst useMenu = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const isOpen = Boolean(anchorEl);\r\n\r\n  const handleOpen = (event) => { setAnchorEl(event.currentTarget) };\r\n\r\n  const handleClose = () => { setAnchorEl(null) };\r\n\r\n  return { anchorEl, isOpen, handleClose, handleOpen }\r\n};\r\n\r\nexport default useMenu;","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { ROUTES } from '../../Routes';\r\n\r\nconst TopBarMenu = ({ anchorEl, handleClose, open }) => {\r\n  const originPositionObj = useMemo(() => ({\r\n    vertical: 'top',\r\n    horizontal: 'left',\r\n  }), []);\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={originPositionObj}\r\n      keepMounted\r\n      transformOrigin={originPositionObj}\r\n      open={open}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem\r\n        onClick={handleClose}\r\n        component={Link}\r\n        to={ROUTES.root}\r\n      >\r\n        Users Gallery\r\n      </MenuItem>\r\n      <MenuItem\r\n        onClick={handleClose}\r\n        component={Link}\r\n        to={ROUTES.settings}\r\n      >\r\n        Settings\r\n      </MenuItem>\r\n    </Menu>\r\n  )\r\n};\r\n\r\nexport default TopBarMenu;\r\n\r\nTopBarMenu.propTypes = {\r\n  anchorEl: PropTypes.any,\r\n  handleClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '30ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst TopBarSearch = ({ disabled, text, onTextChange }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        disabled={disabled}\r\n        inputProps={{ 'aria-label': 'search' }}\r\n        placeholder=\"Search by full name\"\r\n        value={text}\r\n        onChange={onTextChange}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TopBarSearch;\r\n\r\nTopBarSearch.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  text: PropTypes.string,\r\n  onTextChange: PropTypes.func.isRequired\r\n};","import TopBar from './TopBar';\r\n\r\nexport default TopBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { ROUTES } from '../../Routes';\r\nimport useMenu from '../../hooks/useMenu';\r\nimport TopBarMenu from './TopBarMenu';\r\nimport TopBarSearch from './TopBarSearch';\r\n\r\nconst TopBar = ({ searchDisabled, searchText, onSearchChange, ...props }) => {\r\n  const { anchorEl, isOpen, handleClose, handleOpen } = useMenu();\r\n  const location = useLocation();\r\n\r\n  const handleChange = (event) => {\r\n    onSearchChange(event.target.value);\r\n  };\r\n\r\n  const showSearch = (location.pathname === ROUTES.root);\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      {...props}\r\n    >\r\n      <TopBarMenu\r\n        anchorEl={anchorEl}\r\n        handleClose={handleClose}\r\n        open={isOpen}\r\n      />\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={handleOpen}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Hidden\r\n          only={'xs'}\r\n        >\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n          >\r\n            Address Book\r\n          </Typography>\r\n        </Hidden>\r\n        {showSearch && (\r\n          <TopBarSearch\r\n            text={searchText}\r\n            disabled={searchDisabled}\r\n            onTextChange={handleChange}\r\n          />\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default TopBar;\r\n\r\nTopBar.propTypes = {\r\n  searchDisabled: PropTypes.bool.isRequired,\r\n  searchText: PropTypes.string,\r\n  onSearchChange: PropTypes.func.isRequired,\r\n  props: PropTypes.arrayOf(PropTypes.any)\r\n};","import { combineReducers } from 'redux';\r\n\r\nimport { appReducer } from './module';\r\n\r\nconst makeReducers = () => combineReducers({\r\n  app: appReducer\r\n});\r\n\r\nexport default makeReducers;\r\n","import { createLogger } from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport { rootSaga } from './module';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst makeMiddlewares = () => {\r\n  const isDevelopmentMode = process.env.NODE_ENV !== 'production';\r\n\r\n  const middlewares = [\r\n    sagaMiddleware\r\n  ];\r\n\r\n  if (isDevelopmentMode) {\r\n    middlewares.push(createLogger({\r\n      collapsed: true\r\n    }));\r\n  }\r\n\r\n  return {\r\n    middlewares,\r\n    startRootSaga: () => { sagaMiddleware.run(rootSaga); }\r\n  }\r\n};\r\n\r\nexport default makeMiddlewares;\r\n","import React, { useMemo } from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport useSearchContainer from './hooks/useSearchContainer';\r\nimport TopBar from './components/TopBar';\r\nimport Routes from './Routes';\r\nimport makeStore from './store';\r\n\r\nconst store = makeStore();\r\n\r\nconst ConnectedTopBar = (props) => {\r\n  const { disabled, searchText, doSetSearchText} = useSearchContainer();\r\n\r\n  return (\r\n    <TopBar\r\n      {...props}\r\n      searchDisabled={disabled}\r\n      searchText={searchText}\r\n      onSearchChange={doSetSearchText}\r\n    />\r\n  )\r\n};\r\n\r\nconst App = () => {\r\n  const styleHelper = useMemo(() => ({ marginTop: 80 }), []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router basename=\"/address-book\">\r\n          <>\r\n            <CssBaseline />\r\n            <ConnectedTopBar />\r\n            <Box style={styleHelper}>\r\n              <Routes />\r\n            </Box>\r\n          </>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport makeReducers from './reducers';\r\nimport makeMiddlewares from './middlewares';\r\n\r\nconst makeStore = (initialState = {}) => {\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const { middlewares, startRootSaga } = makeMiddlewares();\r\n\r\n  const store = createStore(\r\n    makeReducers(),\r\n    initialState,\r\n    composeEnhancers(\r\n      applyMiddleware(\r\n        ...middlewares\r\n      )\r\n    )\r\n  );\r\n\r\n  startRootSaga();\r\n\r\n  return store;\r\n};\r\n\r\nexport default makeStore;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}