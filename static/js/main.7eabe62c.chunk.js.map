{"version":3,"sources":["hooks/useMenu.js","store/module/constants.js","store/module/reducer.js","pages/MainPage/useModalContainer.js","store/module/actions.js","pages/MainPage/useUsersContainer.js","components/ErrorSnackbar/index.js","components/ErrorSnackbar/ErrorSnackbar.js","components/InfoSnackbar/index.js","components/InfoSnackbar/InfoSnackbar.js","components/UserModal/UserModalTypographyGrid.js","components/UserModal/UserModal.js","components/UserModal/index.js","components/UsersGrid/UsersGridItem.js","components/UsersGrid/UsersGrid.js","components/UsersGrid/index.js","pages/MainPage/index.js","pages/MainPage/MainPage.js","pages/SettingsPage/useNationalitiesContainer.js","components/NationalitySwitchGroup/NationalitySwitch.js","components/NationalitySwitchGroup/index.js","components/NationalitySwitchGroup/NationalitySwitchGroup.js","pages/SettingsPage/SettingsPage.js","pages/SettingsPage/index.js","pages/NotFoundPage/NotFoundPage.js","pages/NotFoundPage/index.js","Routes.js","components/TopBar/TopBarMenu.js","components/TopBar/index.js","components/TopBar/TopBar.js","store/reducers.js","services/api.config.js","services/api.service.js","store/module/sagas.js","store/middlewares.js","App.js","store/store.js","serviceWorker.js","index.js"],"names":["useMenu","useState","anchorEl","setAnchorEl","isOpen","Boolean","handleClose","handleOpen","event","currentTarget","ACTION_TYPES","CONSTANTS","initialState","loading","error","users","usersCache","modalUser","nationalities","swiss","spanish","french","british","appReducer","state","type","payload","USERS_SHOW_MORE","slice","USERS_FETCHING_STARTED","USERS_FETCHING_SUCCESS","USERS_FETCHING_ERROR","MODAL_OPENED","MODAL_CLOSED","NATIONALITY_SET","useModalContainer","dispatch","useDispatch","user","useSelector","app","doOpenModal","useCallback","openModal","doCloseModal","useUsersContainer","hasMore","length","useEffect","INITIALIZE_REQUEST","console","log","doRequestMore","BOTTOM_REACHED","ErrorSnackbar","open","Snackbar","Alert","variant","severity","action","Button","color","size","onClick","window","location","reload","InfoSnackbar","autoHideDuration","message","UserModalTypography","text","Typography","component","UserModalTypographyGrid","IconComponent","CustomContent","props","Grid","container","item","xs","useStyles","makeStyles","theme","card","borderRadius","media","height","content","margin","spacing","UserModal","onCloseModal","classes","useMemo","fullNameWithTitle","name","title","first","last","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","DialogTitle","id","Card","className","CardMedia","image","picture","large","CardContent","gutterBottom","login","username","email","phone","cell","alignItems","direction","street","number","postcode","city","country","root","UsersGridItem","memo","onOpenModal","fullName","CardActionArea","justify","zeroMinWidth","noWrap","prevProps","nextProps","catalogEnd","marginTop","UsersGrid","onLoadMore","loadMore","threshold","map","index","key","value","sm","md","lg","MainPage","useNationalitiesContainer","doToggleNationality","NATIONALITY_TOGGLE","NationalitySwitch","checked","handleChange","label","charAt","toUpperCase","substring","FormControlLabel","control","Switch","onChange","NationalitySwitchGroup","onToggleNationality","target","styleHelperText","FormControl","FormLabel","FormGroup","Object","keys","nationalityName","FormHelperText","style","textWrapper","marginBottom","SettingsPage","NotFoundPage","ROUTES","Routes","path","exact","TopBar","originPositionObj","vertical","horizontal","anchorOrigin","keepMounted","transformOrigin","MenuItem","Link","to","AppBar","position","TopBarMenu","Toolbar","IconButton","edge","aria-label","makeReducers","combineReducers","API_URL","API_PICK_ONLY_KEYS","LANGUAGE_CODES","getUsers","usersCount","takeKeys","nationalitiesCodes","mapping","warn","nationsQueryParam","filter","join","axios","get","params","inc","results","nat","then","response","data","catch","Promise","reject","toggleNationalityFlow","watchNationalityClick","fetchUsers","bottomReachedFlow","watchBottomReached","initializeFlow","rootSaga","select","isClickedCurrentlyOff","selectedCount","values","put","takeEvery","selectedNationalities","call","cache","usersState","cacheState","shouldSaveCache","allEffects","fork","all","take","race","initialize","sagaMiddleware","createSagaMiddleware","makeMiddlewares","middlewares","startRootSaga","run","store","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","makeStore","App","styleHelper","basename","CssBaseline","Box","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7eabe62c.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nconst useMenu = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const isOpen = Boolean(anchorEl);\r\n\r\n  const handleOpen = (event) => { setAnchorEl(event.currentTarget) };\r\n\r\n  const handleClose = () => { setAnchorEl(null) };\r\n\r\n  return { anchorEl, isOpen, handleClose, handleOpen }\r\n};\r\n\r\nexport default useMenu;","const MODULE_NAME = 'APP';\r\n\r\nconst ACTION_TYPES = {\r\n  'INITIALIZE_REQUEST': `${MODULE_NAME}/INITIALIZE_REQUEST`,\r\n  'BOTTOM_REACHED': `${MODULE_NAME}/BOTTOM_REACHED`,\r\n  'MODAL_OPENED': `${MODULE_NAME}/MODAL_OPENED`,\r\n  'MODAL_CLOSED': `${MODULE_NAME}/MODAL_CLOSED`,\r\n  'NATIONALITY_TOGGLE': `${MODULE_NAME}/NATIONALITY_TOGGLE`,\r\n  'NATIONALITY_SET': `${MODULE_NAME}/NATIONALITY_SET`,\r\n  'USERS_FETCHING_STARTED': `${MODULE_NAME}/USERS_FETCHING_STARTED`,\r\n  'USERS_FETCHING_ERROR': `${MODULE_NAME}/USERS_FETCHING_ERROR`,\r\n  'USERS_FETCHING_SUCCESS': `${MODULE_NAME}/USERS_FETCHING_SUCCESS`,\r\n  'USERS_SHOW_MORE': `${MODULE_NAME}/USERS_SHOW_MORE`\r\n};\r\n\r\nconst CONSTANTS = {\r\n  USERS_PER_TICK: 50,\r\n  USERS_MAX_COUNT: 1000\r\n};\r\n\r\nexport { ACTION_TYPES, CONSTANTS };\r\n","import { ACTION_TYPES, CONSTANTS } from './constants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  users: [],\r\n  usersCache: [],\r\n  modalUser: null,\r\n  nationalities: {\r\n    swiss: true,\r\n    spanish: true,\r\n    french: true,\r\n    british: true\r\n  }\r\n};\r\n\r\nconst appReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ACTION_TYPES.USERS_SHOW_MORE:\r\n      return {\r\n        ...state,\r\n        users: [\r\n          ...state.users,\r\n          ...state.usersCache.slice(0, CONSTANTS.USERS_PER_TICK)\r\n        ],\r\n        usersCache: [\r\n          ...state.usersCache.slice(CONSTANTS.USERS_PER_TICK)\r\n        ]\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: initialState.error\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        usersCache: payload\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_ERROR:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: payload\r\n        };\r\n\r\n\r\n    case ACTION_TYPES.MODAL_OPENED:\r\n      return {\r\n        ...state,\r\n        modalUser: payload\r\n      };\r\n\r\n    case ACTION_TYPES.MODAL_CLOSED:\r\n      return {\r\n        ...state,\r\n        modalUser: null\r\n      };\r\n\r\n    case ACTION_TYPES.NATIONALITY_SET:\r\n      return {\r\n        ...state,\r\n        loading: initialState.loading,\r\n        users: initialState.users,\r\n        usersCache: initialState.usersCache,\r\n        nationalities: {\r\n          ...state.nationalities,\r\n          [payload]: !state.nationalities[payload]\r\n        }\r\n      };\r\n\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { openModal, closeModal } from '../../store/module';\r\nimport { useCallback } from 'react';\r\n\r\nconst useModalContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(state => state.app.modalUser);\r\n  const isOpen = Boolean(user);\r\n\r\n  const doOpenModal = useCallback((user) => {\r\n    dispatch(openModal(user))\r\n  }, [dispatch]);\r\n  const doCloseModal = useCallback(() => {\r\n    dispatch(closeModal());\r\n  }, [dispatch]);\r\n\r\n  return { user, isOpen, doOpenModal, doCloseModal }\r\n};\r\n\r\nexport default useModalContainer;","import { ACTION_TYPES } from './constants';\r\n\r\nexport const initializeUsers = () => ({\r\n  type: ACTION_TYPES.INITIALIZE_REQUEST\r\n});\r\n\r\nexport const bottomReached = () => ({\r\n  type: ACTION_TYPES.BOTTOM_REACHED\r\n});\r\n\r\nexport const openModal = (user) => ({\r\n  type: ACTION_TYPES.MODAL_OPENED,\r\n  payload: user\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: ACTION_TYPES.MODAL_CLOSED\r\n});\r\n\r\nexport const toggleNationality = (nationalityName) => ({\r\n  type: ACTION_TYPES.NATIONALITY_TOGGLE,\r\n  payload: nationalityName\r\n});\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  CONSTANTS,\r\n  bottomReached,\r\n  initializeUsers\r\n} from '../../store/module';\r\n\r\nconst useUsersContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const users = useSelector(state => state.app.users);\r\n  const usersCache = useSelector(state => state.app.usersCache);\r\n  const loading = useSelector(state => state.app.loading);\r\n  const error = useSelector(state => state.app.error);\r\n\r\n  const hasMore = users?.length < CONSTANTS.USERS_MAX_COUNT;\r\n\r\n  const doRequestMore = () => {\r\n    dispatch(bottomReached());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const initialize = () => {\r\n      dispatch(initializeUsers());\r\n    };\r\n    initialize();\r\n  }, [dispatch]);\r\n\r\n\r\n  console.log('usersCache', usersCache?.length );\r\n  console.log('users', users?.length );\r\n\r\n  return { doRequestMore, error, hasMore, loading, users }\r\n};\r\n\r\nexport default useUsersContainer;","import ErrorSnackbar from './ErrorSnackbar';\r\n\r\nexport default ErrorSnackbar;","import React from 'react';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst SnackbarAlert = ({ open }) => {\r\n  const doReload = () => {\r\n    window.location.reload()\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n    >\r\n      <Alert\r\n        variant=\"filled\"\r\n        severity=\"error\"\r\n        action={\r\n          <Button\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            size=\"medium\"\r\n            onClick={doReload}\r\n          >\r\n            Reload app\r\n          </Button>\r\n        }\r\n      >\r\n        Error occurred, please click button to reload app\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n};\r\n\r\nexport default SnackbarAlert;\r\n","import InfoSnackbar from './InfoSnackbar'\r\n\r\nexport default InfoSnackbar;","import React from 'react';\r\n\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nconst InfoSnackbar = ({ autoHideDuration, message, open }) => {\r\n  return (\r\n    <Snackbar\r\n      autoHideDuration={autoHideDuration}\r\n      open={open}\r\n    >\r\n      <Alert\r\n        variant=\"filled\"\r\n        severity=\"info\"\r\n      >\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  )\r\n};\r\n\r\nexport default InfoSnackbar;\r\n","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst UserModalTypography = ({ text }) => (\r\n  <Typography\r\n    variant=\"body2\"\r\n    color=\"textSecondary\"\r\n    component=\"p\"\r\n  >\r\n    {text}\r\n  </Typography>\r\n);\r\n\r\nconst UserModalTypographyGrid = ({ IconComponent, CustomContent, text, ...props }) => {\r\n  return (\r\n    <Grid container {...props}>\r\n      <Grid item xs={2}>\r\n        { IconComponent }\r\n      </Grid>\r\n      <Grid item xs={10}>\r\n        {text\r\n          ? <UserModalTypography text={text} />\r\n          : CustomContent\r\n        }\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserModalTypographyGrid;\r\n\r\nexport {\r\n  UserModalTypography\r\n}","import React, { useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport PhoneAndroidIcon from '@material-ui/icons/PhoneAndroid';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\n\r\nimport UserModalTypographyGrid, { UserModalTypography } from './UserModalTypographyGrid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    borderRadius: 0\r\n  },\r\n  media: {\r\n    height: 340\r\n  },\r\n  content: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst UserModal = ({ user, onCloseModal }) => {\r\n  const classes = useStyles();\r\n\r\n  const isOpen = useMemo(() => Boolean(user), [user]);\r\n  const fullNameWithTitle = useMemo(() => {\r\n    return `${user?.name?.title} ${user?.name?.first} ${user?.name?.last}`;\r\n  }, [user]);\r\n\r\n  if (!user) { return null; }\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth={'xs'}\r\n      onClose={onCloseModal}\r\n      aria-labelledby=\"user-dialog-title\"\r\n      open={isOpen}\r\n    >\r\n      <DialogTitle id=\"user-dialog-title\">\r\n        Details\r\n      </DialogTitle>\r\n\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={user.picture.large}\r\n          title={`${fullNameWithTitle} face photo`}\r\n        />\r\n        <CardContent className={classes.content}>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h4\"\r\n            component=\"h2\"\r\n          >\r\n            {fullNameWithTitle}\r\n          </Typography>\r\n\r\n          <UserModalTypographyGrid\r\n            IconComponent={<PersonIcon color=\"primary\" />}\r\n            text={user.login.username}\r\n          />\r\n\r\n          <UserModalTypographyGrid\r\n            IconComponent={<EmailIcon color=\"primary\" />}\r\n            text={user.email}\r\n          />\r\n\r\n          <UserModalTypographyGrid\r\n            IconComponent={<PhoneIcon color=\"primary\" />}\r\n            text={user.phone}\r\n          />\r\n\r\n          <UserModalTypographyGrid\r\n            IconComponent={<PhoneAndroidIcon color=\"primary\" />}\r\n            text={user.cell}\r\n          />\r\n\r\n          <UserModalTypographyGrid\r\n            alignItems=\"center\"\r\n            IconComponent={<HomeIcon color=\"primary\" />}\r\n            CustomContent={\r\n              <Grid\r\n                container\r\n                direction=\"column\"\r\n              >\r\n                <Grid item xs>\r\n                  <UserModalTypography\r\n                    text={`${user.location.street.name} ${user.location.street.number}`}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <UserModalTypography\r\n                    text={`${user.location.postcode} ${user.location.city} `}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <UserModalTypography\r\n                    text={`${user.location.state} / ${user.location.country}`}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n\r\n        </CardContent>\r\n      </Card>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UserModal;\r\n","import UserModal from './UserModal';\r\n\r\nexport default UserModal;","import React, { useMemo, memo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 260\r\n  },\r\n  media: {\r\n    height: 120\r\n  }\r\n});\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.user === nextProps.user;\r\n};\r\n\r\nconst UsersGridItem = memo(({ user, onOpenModal }) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClick = () => {\r\n    onOpenModal(user);\r\n  };\r\n\r\n  const fullName = useMemo(() => {\r\n    return `${user?.name.first} ${user?.name.last}`;\r\n  }, [user]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea\r\n        onClick={handleClick}\r\n      >\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={user?.picture.large}\r\n          title={`${fullName} face photo`}\r\n        />\r\n        <CardContent>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n            component=\"h2\"\r\n          >\r\n            {fullName}\r\n          </Typography>\r\n\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"stretch\"\r\n          >\r\n            <Grid item xs={2}>\r\n              <PersonIcon color=\"primary\" />\r\n            </Grid>\r\n            <Grid item xs={10} zeroMinWidth>\r\n              <Typography\r\n                noWrap\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n              >\r\n                {user?.login.username}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item xs={2}>\r\n              <EmailIcon color=\"primary\" />\r\n            </Grid>\r\n            <Grid item xs={10} zeroMinWidth>\r\n              <Typography\r\n                noWrap\r\n                variant=\"body2\"\r\n                color=\"textSecondary\"\r\n                component=\"p\"\r\n              >\r\n                {user?.email}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UsersGridItem;\r\n","import React, { memo } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport UsersGridItem from './UsersGridItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: theme.spacing(4)\r\n  },\r\n  catalogEnd: {\r\n    marginTop: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst shouldNotRerender = (prevProps, nextProps) => {\r\n  return prevProps.users === nextProps.users;\r\n};\r\n\r\nconst UsersGrid = memo(({ users, onOpenModal, onLoadMore, hasMore }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <InfiniteScroll\r\n        className={classes.root}\r\n        loadMore={onLoadMore}\r\n        hasMore={hasMore}\r\n        threshold={400}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={4}\r\n        >\r\n          {users?.map((user, index) => (\r\n            <Grid\r\n              item\r\n              key={user.id.value}\r\n              xs={6}\r\n              sm={4}\r\n              md={3}\r\n              lg={2}\r\n            >\r\n              {index}\r\n              <UsersGridItem\r\n                user={user}\r\n                onOpenModal={onOpenModal}\r\n              />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n        {!hasMore && <Grid\r\n          className={classes.catalogEnd}\r\n          container\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={4}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              variant=\"h4\"\r\n              color=\"textSecondary\"\r\n            >\r\n              End of users catalog\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>}\r\n      </InfiniteScroll>\r\n    </>\r\n  );\r\n}, shouldNotRerender);\r\n\r\nexport default UsersGrid;\r\n","import UsersGrid from './UsersGrid';\r\n\r\nexport default UsersGrid;","import MainPage from './MainPage';\r\n\r\nexport default MainPage;","import React from 'react';\r\n\r\nimport useModalContainer from './useModalContainer';\r\nimport useUsersContainer from './useUsersContainer';\r\nimport ErrorSnackbar from '../../components/ErrorSnackbar';\r\nimport InfoSnackbar from '../../components/InfoSnackbar';\r\nimport UserModal from '../../components/UserModal';\r\nimport UsersGrid from '../../components/UsersGrid';\r\n\r\nconst MainPage = () => {\r\n  const { user, isOpen, doOpenModal, doCloseModal } = useModalContainer();\r\n  const { error, hasMore, loading, users, doRequestMore } = useUsersContainer();\r\n\r\n  return (\r\n    <>\r\n      <ErrorSnackbar\r\n        open={error}\r\n      />\r\n      <InfoSnackbar\r\n        open={loading}\r\n        message={'Loading ... '}\r\n      />\r\n      <UserModal\r\n        user={user}\r\n        isOpen={isOpen}\r\n        onCloseModal={doCloseModal}\r\n      />\r\n      <UsersGrid\r\n        hasMore={hasMore}\r\n        users={users}\r\n        onLoadMore={doRequestMore}\r\n        onOpenModal={doOpenModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { toggleNationality } from '../../store/module';\r\n\r\nconst useNationalitiesContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const nationalities = useSelector(state => state.app.nationalities);\r\n\r\n  const doToggleNationality = (name) => dispatch(toggleNationality(name));\r\n\r\n  return { nationalities, doToggleNationality }\r\n};\r\n\r\nexport default useNationalitiesContainer;","import React from 'react';\r\n\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nconst NationalitySwitch = ({ checked, handleChange, name }) => {\r\n  const label = name.charAt(0).toUpperCase() + name.substring(1);\r\n\r\n  return (\r\n    <FormControlLabel\r\n      control={\r\n        <Switch\r\n          checked={checked}\r\n          onChange={handleChange}\r\n          name={name}\r\n        />\r\n      }\r\n      label={label}\r\n    />\r\n  );\r\n};\r\n\r\nexport default NationalitySwitch;\r\n","import NationalitySwitchGroup from './NationalitySwitchGroup';\r\n\r\nexport default NationalitySwitchGroup;","import React, { useMemo } from 'react';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport NationalitySwitch from './NationalitySwitch';\r\n\r\nconst NationalitySwitchGroup = ({ nationalities, onToggleNationality }) => {\r\n  const handleChange = (event) => {\r\n    onToggleNationality(event.target.name);\r\n  };\r\n\r\n  const styleHelperText = useMemo(() => ({ maxWidth: 400 }), []);\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">\r\n        Select nationalities\r\n      </FormLabel>\r\n      <FormGroup>\r\n        {Object.keys(nationalities).map((nationalityName) => (\r\n          <NationalitySwitch\r\n            key={nationalityName}\r\n            checked={nationalities[nationalityName]}\r\n            handleChange={handleChange}\r\n            name={nationalityName}\r\n          />\r\n        ))}\r\n      </FormGroup>\r\n      <FormHelperText\r\n        style={styleHelperText}\r\n      >\r\n        Please choose at least 1 nationality.\r\n        Remember that if you toggle any switch, all\r\n        previously loaded data on main page will be removed.\r\n      </FormHelperText>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default NationalitySwitchGroup;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport useNationalitiesContainer from './useNationalitiesContainer';\r\nimport NationalitySwitchGroup from '../../components/NationalitySwitchGroup';\r\n\r\nconst useStyles = makeStyles({\r\n  textWrapper: {\r\n    marginBottom: 50\r\n  }\r\n});\r\n\r\nconst SettingsPage = () => {\r\n  const classes = useStyles();\r\n\r\n  const { nationalities, doToggleNationality } = useNationalitiesContainer();\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      direction=\"column\"\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid\r\n        item\r\n        className={classes.textWrapper}\r\n      >\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"inherit\"\r\n        >\r\n          Settings page\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <NationalitySwitchGroup\r\n          nationalities={nationalities}\r\n          onToggleNationality={doToggleNationality}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;\r\n","import SettingsPage from './SettingsPage';\r\n\r\nexport default SettingsPage;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: 200,\r\n  },\r\n  text: {\r\n    margin: '0 30px'\r\n  }\r\n});\r\n\r\nconst UsersGrid = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid\r\n      className={classes.root}\r\n      container\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n    >\r\n      <Grid item>\r\n        <Typography\r\n          className={classes.text}\r\n          variant=\"h4\"\r\n          color=\"textSecondary\"\r\n        >\r\n          404 Page Not Found :(\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UsersGrid;\r\n","import NotFoundPage from './NotFoundPage';\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport MainPage from './pages/MainPage';\r\nimport SettingsPage from './pages/SettingsPage';\r\nimport NotFoundPage from './pages/NotFoundPage';\r\n\r\nexport const ROUTES = {\r\n  root: '/',\r\n  settings: '/settings'\r\n};\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route\r\n        path={ROUTES.root}\r\n        component={MainPage}\r\n        exact\r\n      />\r\n      <Route\r\n        path={ROUTES.settings}\r\n        component={SettingsPage}\r\n      />\r\n      <Route\r\n        component={NotFoundPage}\r\n      />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React, { useMemo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { ROUTES } from '../../Routes';\r\n\r\nconst TopBar = (props) => {\r\n  const { anchorEl, handleClose, isOpen } = props;\r\n\r\n  const originPositionObj = useMemo(() => ({\r\n    vertical: 'top',\r\n    horizontal: 'left',\r\n  }), []);\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={originPositionObj}\r\n      keepMounted\r\n      transformOrigin={originPositionObj}\r\n      open={isOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem\r\n        onClick={handleClose}\r\n        component={Link}\r\n        to={ROUTES.root}\r\n      >\r\n        Users Gallery\r\n      </MenuItem>\r\n      <MenuItem\r\n        onClick={handleClose}\r\n        component={Link}\r\n        to={ROUTES.settings}\r\n      >\r\n        Settings\r\n      </MenuItem>\r\n    </Menu>\r\n  )\r\n};\r\n\r\nexport default TopBar;","import TopBar from './TopBar';\r\n\r\nexport default TopBar;","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport useMenu from '../../hooks/useMenu';\r\nimport TopBarMenu from './TopBarMenu';\r\n\r\nconst TopBar = () => {\r\n  const { anchorEl, isOpen, handleClose, handleOpen } = useMenu();\r\n\r\n  return (\r\n    <AppBar position=\"fixed\">\r\n      <TopBarMenu\r\n        anchorEl={anchorEl}\r\n        handleClose={handleClose}\r\n        isOpen={isOpen}\r\n      />\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={handleOpen}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n        >\r\n          Address Book\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default TopBar;","import { combineReducers } from 'redux';\r\nimport { appReducer } from './module';\r\n\r\nconst makeReducers = () => combineReducers({\r\n  app: appReducer\r\n});\r\n\r\nexport default makeReducers;\r\n","export const API_URL = 'https://randomuser.me/api/';\r\n\r\nexport const API_PICK_ONLY_KEYS = [\r\n  'name',\r\n  'location',\r\n  'email',\r\n  'login',\r\n  'phone',\r\n  'cell',\r\n  'id',\r\n  'picture',\r\n  'nat'\r\n];\r\n\r\nexport const DEFAULT_USERS_COUNT = 1;\r\n\r\nexport const LANGUAGE_CODES = {\r\n  british: 'GB',\r\n  french: 'FR',\r\n  spanish: 'ES',\r\n  swiss: 'CH'\r\n};","import axios from 'axios';\r\n\r\nimport {\r\n  API_URL,\r\n  API_PICK_ONLY_KEYS,\r\n  DEFAULT_USERS_COUNT,\r\n  LANGUAGE_CODES\r\n} from './api.config';\r\n\r\nexport const getUsers = ({\r\n  nationalities = [],\r\n  usersCount = DEFAULT_USERS_COUNT,\r\n  takeKeys = API_PICK_ONLY_KEYS\r\n} = {}) => {\r\n  const nationalitiesCodes = nationalities.map((name) => {\r\n    const mapping = LANGUAGE_CODES[name];\r\n    !mapping && console.warn('No API mapping for nationality:', name);\r\n    return mapping;\r\n  });\r\n\r\n  const nationsQueryParam = nationalitiesCodes?.filter(Boolean).join(',');\r\n\r\n  return axios.get(API_URL, {\r\n    params: {\r\n      ...(takeKeys && { inc: takeKeys.join(',') }),\r\n      ...(usersCount && { results: usersCount }),\r\n      ...(nationsQueryParam && { nat: nationsQueryParam })\r\n    }\r\n  })\r\n    .then(response => {\r\n      return response.data?.results\r\n    })\r\n    .catch(error => {\r\n      return Promise.reject(error);\r\n    })\r\n};","import {\r\n  all,\r\n  call,\r\n  fork,\r\n  put,\r\n  race,\r\n  select,\r\n  take,\r\n  takeEvery\r\n} from 'redux-saga/effects';\r\n\r\nimport { ACTION_TYPES, CONSTANTS } from './constants';\r\nimport { getUsers } from '../../services/api.service';\r\n\r\nexport function* toggleNationalityFlow({ payload }) {\r\n  const nationalities = yield select(state => state.app.nationalities);\r\n  const isClickedCurrentlyOff = !nationalities[payload];\r\n  const selectedCount = Object.values(nationalities).filter(Boolean).length;\r\n\r\n  if (isClickedCurrentlyOff || selectedCount > 1) {\r\n    yield put({\r\n      type: ACTION_TYPES.NATIONALITY_SET,\r\n      payload: payload\r\n    });\r\n  }\r\n}\r\n\r\nexport function* watchNationalityClick() {\r\n  yield takeEvery(ACTION_TYPES.NATIONALITY_TOGGLE, toggleNationalityFlow);\r\n}\r\n\r\nexport function* fetchUsers() {\r\n  yield put({\r\n    type: ACTION_TYPES.USERS_FETCHING_STARTED\r\n  });\r\n\r\n  const nationalities = yield select(state => state.app.nationalities);\r\n  const selectedNationalities = Object.keys(nationalities)\r\n    .filter((name) => nationalities[name]);\r\n\r\n  try {\r\n    const cache = yield call(getUsers ,{\r\n      usersCount: CONSTANTS.USERS_PER_TICK,\r\n      nationalities: selectedNationalities\r\n    });\r\n\r\n    console.log('FETCHED USERS:', cache);\r\n\r\n    yield put({\r\n      type: ACTION_TYPES.USERS_FETCHING_SUCCESS,\r\n      payload: cache\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTION_TYPES.USERS_FETCHING_ERROR,\r\n      payload: error\r\n    });\r\n  }\r\n}\r\n\r\nexport function* bottomReachedFlow() {\r\n  const usersState = yield select(state => state.app.users);\r\n  const cacheState = yield select(state => state.app.usersCache);\r\n  const shouldSaveCache = (usersState?.length + cacheState?.length) < CONSTANTS.USERS_MAX_COUNT;\r\n\r\n  const allEffects = [\r\n    put({\r\n      type: ACTION_TYPES.USERS_SHOW_MORE\r\n    }),\r\n    ...(shouldSaveCache\r\n      ? [fork(fetchUsers)]\r\n      : [put({\r\n        type: ACTION_TYPES.USERS_FETCHING_SUCCESS,\r\n        payload: []\r\n      })])\r\n  ];\r\n\r\n  yield all(allEffects);\r\n}\r\n\r\nexport function* watchBottomReached() {\r\n  while (true) {\r\n    yield all([\r\n      take(ACTION_TYPES.USERS_FETCHING_SUCCESS),\r\n      take(ACTION_TYPES.BOTTOM_REACHED)\r\n    ]);\r\n    yield fork(bottomReachedFlow);\r\n  }\r\n}\r\n\r\nexport function* initializeFlow() {\r\n  while (true) {\r\n    const [initialize, nationalitySet] = yield race([\r\n      take(ACTION_TYPES.INITIALIZE_REQUEST),\r\n      take(ACTION_TYPES.NATIONALITY_SET)\r\n    ]);\r\n    if (nationalitySet) { return }\r\n    if (initialize) {\r\n      const users = yield select(state => state.app.users);\r\n      const usersCache = yield select(state => state.app.usersCache);\r\n      if (!users.length && !usersCache.length) {\r\n        yield fork(fetchUsers);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    initializeFlow(),\r\n    watchBottomReached(),\r\n    watchNationalityClick()\r\n  ]);\r\n}","import { createLogger } from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport rootSaga from './module/sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst makeMiddlewares = () => {\r\n  const isDevelopmentMode = process.env.NODE_ENV !== 'production';\r\n\r\n  const middlewares = [\r\n    sagaMiddleware\r\n  ];\r\n\r\n  if (isDevelopmentMode) {\r\n    middlewares.push(createLogger({\r\n      collapsed: true\r\n    }));\r\n  }\r\n\r\n  return {\r\n    middlewares,\r\n    startRootSaga: () => { sagaMiddleware.run(rootSaga); }\r\n  }\r\n};\r\n\r\nexport default makeMiddlewares;\r\n","import React, { useMemo } from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport TopBar from './components/TopBar';\r\nimport Routes from './Routes';\r\nimport makeStore from './store';\r\n\r\nconst store = makeStore();\r\n\r\nconst App = () => {\r\n  const styleHelper = useMemo(() => ({ marginTop: 80 }), []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router basename=\"/address-book\">\r\n          <>\r\n            <CssBaseline />\r\n            <TopBar />\r\n            <Box style={styleHelper}>\r\n              <Routes  />\r\n            </Box>\r\n          </>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport makeReducers from './reducers';\r\nimport makeMiddlewares from './middlewares';\r\n\r\nconst makeStore = (initialState = {}) => {\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const { middlewares, startRootSaga } = makeMiddlewares();\r\n\r\n  const store = createStore(\r\n    makeReducers(),\r\n    initialState,\r\n    composeEnhancers(\r\n      applyMiddleware(\r\n        ...middlewares\r\n      )\r\n    )\r\n  );\r\n\r\n  startRootSaga();\r\n\r\n  return store;\r\n};\r\n\r\nexport default makeStore;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}