{"version":3,"sources":["Routes.js","hooks/useMenu.js","components/TopBar/TopBarMenu.js","components/TopBar/TopBarSearch.js","components/TopBar/index.js","components/TopBar/TopBar.js","store/reducers.js","store/middlewares.js","App.js","store/store.js","serviceWorker.js","index.js","store/module/constants.js","services/api.config.js","services/api.service.js","store/module/selectors.js","store/module/sagas.js","store/module/reducer.js","store/module/actions.js","hooks/useSearchContainer.js"],"names":["MainPage","lazy","SettingsPage","NotFoundPage","ROUTES","Routes","fallback","path","component","exact","useMenu","useState","anchorEl","setAnchorEl","isOpen","Boolean","handleClose","handleOpen","event","currentTarget","TopBarMenu","open","originPositionObj","useMemo","vertical","horizontal","anchorOrigin","keepMounted","transformOrigin","onClose","MenuItem","onClick","Link","to","useStyles","makeStyles","theme","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","width","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","TopBarSearch","disabled","text","onTextChange","classes","className","InputBase","root","input","inputProps","placeholder","value","onChange","TopBar","searchDisabled","searchText","onSearchChange","props","showSearch","useLocation","pathname","AppBar","Toolbar","IconButton","edge","aria-label","Hidden","only","Typography","variant","target","makeReducers","combineReducers","app","appReducer","sagaMiddleware","createSagaMiddleware","makeMiddlewares","middlewares","startRootSaga","run","rootSaga","store","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","makeStore","ConnectedTopBar","useSearchContainer","doSetSearchText","App","styleHelper","marginTop","basename","CssBaseline","Box","style","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","ACTION_TYPES","CONSTANTS","SEARCH_DELAY_MS","USERS_PER_TICK","USERS_MAX_COUNT","API_URL","API_PICK_ONLY_KEYS","LANGUAGE_CODES","british","french","polish","spanish","swiss","getUsers","nationalities","page","seed","takeKeys","usersCount","nationalitiesCodes","map","name","mapping","warn","nationsQueryParam","filter","join","axios","get","params","inc","results","nat","response","data","Promise","reject","selectError","state","selectLoading","loading","selectModalUser","modalUser","selectNationalities","selectPage","usersPage","selectSearchProcessing","processing","selectSearchString","searchString","selectSearchUsers","users","selectUsers","selectUsersCache","usersCache","toggleNationalityFlow","watchNationalityClick","searchTextChangeFlow","watchSearchTextChange","fetchUsers","bottomReachedFlow","watchBottomReached","watchInitialize","payload","select","isClickedCurrentlyOff","selectedCount","Object","values","length","put","type","NATIONALITY_SET","takeEvery","NATIONALITY_TOGGLE","SEARCH_TEXT_SET","SEARCH_TEXT_APPLY_STARTED","delay","usersState","usersVisible","user","fullName","first","last","toLowerCase","testString","includes","searchedUsers","SEARCH_TEXT_APPLY_SUCCESS","take","SEARCH_TEXT_CHANGE","task","cancel","fork","USERS_FETCHING_STARTED","selectedNationalities","keys","call","cache","USERS_FETCHING_SUCCESS","USERS_FETCHING_ERROR","cacheState","shouldSaveCache","allEffects","USERS_SHOW_MORE","all","BOTTOM_REACHED","race","INITIALIZE_REQUEST","initialize","slice","MODAL_OPENED","MODAL_CLOSED","initializeUsers","bottomReached","openModal","closeModal","searchTextChange","toggleNationality","nationalityName","dispatch","useDispatch","useSelector","foundUsers","showResults"],"mappings":"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","file":"static/js/main.ad0447d0.chunk.js","sourcesContent":["import React, { Suspense, lazy } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst MainPage = lazy(() => import('./pages/MainPage'));\r\nconst SettingsPage = lazy(() => import('./pages/SettingsPage'));\r\nconst NotFoundPage = lazy(() => import('./pages/NotFoundPage'));\r\n\r\nexport const ROUTES = {\r\n  root: '/',\r\n  settings: '/settings'\r\n};\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Switch>\r\n        <Route\r\n          path={ROUTES.root}\r\n          component={MainPage}\r\n          exact\r\n        />\r\n        <Route\r\n          path={ROUTES.settings}\r\n          component={SettingsPage}\r\n        />\r\n        <Route\r\n          component={NotFoundPage}\r\n        />\r\n      </Switch>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import { useState } from 'react';\r\n\r\nconst useMenu = () => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const isOpen = Boolean(anchorEl);\r\n\r\n  const handleOpen = (event) => { setAnchorEl(event.currentTarget) };\r\n\r\n  const handleClose = () => { setAnchorEl(null) };\r\n\r\n  return { anchorEl, isOpen, handleClose, handleOpen }\r\n};\r\n\r\nexport default useMenu;","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport { ROUTES } from '../../Routes';\r\n\r\nconst TopBarMenu = ({ anchorEl, handleClose, open }) => {\r\n  const originPositionObj = useMemo(() => ({\r\n    vertical: 'top',\r\n    horizontal: 'left',\r\n  }), []);\r\n\r\n  return (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={originPositionObj}\r\n      keepMounted\r\n      transformOrigin={originPositionObj}\r\n      open={open}\r\n      onClose={handleClose}\r\n    >\r\n      <MenuItem\r\n        onClick={handleClose}\r\n        component={Link}\r\n        to={ROUTES.root}\r\n      >\r\n        Users Gallery\r\n      </MenuItem>\r\n      <MenuItem\r\n        onClick={handleClose}\r\n        component={Link}\r\n        to={ROUTES.settings}\r\n      >\r\n        Settings\r\n      </MenuItem>\r\n    </Menu>\r\n  )\r\n};\r\n\r\nexport default TopBarMenu;\r\n\r\nTopBarMenu.propTypes = {\r\n  anchorEl: PropTypes.any,\r\n  handleClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '30ch',\r\n    },\r\n  },\r\n}));\r\n\r\nconst TopBarSearch = ({ disabled, text, onTextChange }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        disabled={disabled}\r\n        inputProps={{ 'aria-label': 'search' }}\r\n        placeholder=\"Search by full name\"\r\n        value={text}\r\n        onChange={onTextChange}\r\n      />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default TopBarSearch;\r\n\r\nTopBarSearch.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  text: PropTypes.string,\r\n  onTextChange: PropTypes.func.isRequired\r\n};","import TopBar from './TopBar';\r\n\r\nexport default TopBar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport { ROUTES } from '../../Routes';\r\nimport useMenu from '../../hooks/useMenu';\r\nimport TopBarMenu from './TopBarMenu';\r\nimport TopBarSearch from './TopBarSearch';\r\n\r\nconst TopBar = ({ searchDisabled, searchText, onSearchChange, ...props }) => {\r\n  const { anchorEl, isOpen, handleClose, handleOpen } = useMenu();\r\n  const location = useLocation();\r\n\r\n  const handleChange = (event) => {\r\n    onSearchChange(event.target.value);\r\n  };\r\n\r\n  const showSearch = (location.pathname === ROUTES.root);\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      {...props}\r\n    >\r\n      <TopBarMenu\r\n        anchorEl={anchorEl}\r\n        handleClose={handleClose}\r\n        open={isOpen}\r\n      />\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={handleOpen}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Hidden\r\n          only={'xs'}\r\n        >\r\n          <Typography\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n          >\r\n            Address Book\r\n          </Typography>\r\n        </Hidden>\r\n        {showSearch && (\r\n          <TopBarSearch\r\n            text={searchText}\r\n            disabled={searchDisabled}\r\n            onTextChange={handleChange}\r\n          />\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n};\r\n\r\nexport default TopBar;\r\n\r\nTopBar.propTypes = {\r\n  searchDisabled: PropTypes.bool.isRequired,\r\n  searchText: PropTypes.string,\r\n  onSearchChange: PropTypes.func.isRequired,\r\n  props: PropTypes.arrayOf(PropTypes.any)\r\n};","import { combineReducers } from 'redux';\r\n\r\nimport { appReducer } from './module';\r\n\r\nconst makeReducers = () => combineReducers({\r\n  app: appReducer\r\n});\r\n\r\nexport default makeReducers;\r\n","import { createLogger } from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport { rootSaga } from './module';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst makeMiddlewares = () => {\r\n  const isDevelopmentMode = process.env.NODE_ENV === 'development';\r\n\r\n  const middlewares = [\r\n    sagaMiddleware\r\n  ];\r\n\r\n  if (isDevelopmentMode) {\r\n    middlewares.push(\r\n      createLogger({\r\n        collapsed: true\r\n      })\r\n    );\r\n  }\r\n\r\n  return {\r\n    middlewares,\r\n    startRootSaga: () => { sagaMiddleware.run(rootSaga); }\r\n  }\r\n};\r\n\r\nexport default makeMiddlewares;\r\n","import React, { useMemo } from 'react';\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nimport useSearchContainer from './hooks/useSearchContainer';\r\nimport TopBar from './components/TopBar';\r\nimport Routes from './Routes';\r\nimport makeStore from './store';\r\n\r\nconst store = makeStore();\r\n\r\nconst ConnectedTopBar = (props) => {\r\n  const { disabled, searchText, doSetSearchText} = useSearchContainer();\r\n\r\n  return (\r\n    <TopBar\r\n      {...props}\r\n      searchDisabled={disabled}\r\n      searchText={searchText}\r\n      onSearchChange={doSetSearchText}\r\n    />\r\n  )\r\n};\r\n\r\nconst App = () => {\r\n  const styleHelper = useMemo(() => ({ marginTop: 80 }), []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router basename=\"/address-book\">\r\n          <>\r\n            <CssBaseline />\r\n            <ConnectedTopBar />\r\n            <Box style={styleHelper}>\r\n              <Routes />\r\n            </Box>\r\n          </>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport makeReducers from './reducers';\r\nimport makeMiddlewares from './middlewares';\r\n\r\nconst makeStore = (initialState = {}) => {\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n  const { middlewares, startRootSaga } = makeMiddlewares();\r\n\r\n  const store = createStore(\r\n    makeReducers(),\r\n    initialState,\r\n    composeEnhancers(\r\n      applyMiddleware(\r\n        ...middlewares\r\n      )\r\n    )\r\n  );\r\n\r\n  startRootSaga();\r\n\r\n  return store;\r\n};\r\n\r\nexport default makeStore;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const MODULE_NAME = 'APP';\r\n\r\nconst ACTION_TYPES = {\r\n  'INITIALIZE_REQUEST': `${MODULE_NAME}/INITIALIZE_REQUEST`,\r\n  'BOTTOM_REACHED': `${MODULE_NAME}/BOTTOM_REACHED`,\r\n  'MODAL_OPENED': `${MODULE_NAME}/MODAL_OPENED`,\r\n  'MODAL_CLOSED': `${MODULE_NAME}/MODAL_CLOSED`,\r\n  'NATIONALITY_TOGGLE': `${MODULE_NAME}/NATIONALITY_TOGGLE`,\r\n  'NATIONALITY_SET': `${MODULE_NAME}/NATIONALITY_SET`,\r\n  'SEARCH_TEXT_APPLY_STARTED': `${MODULE_NAME}/SEARCH_TEXT_APPLY_STARTED`,\r\n  'SEARCH_TEXT_APPLY_SUCCESS': `${MODULE_NAME}/SEARCH_TEXT_APPLY_SUCCESS`,\r\n  'SEARCH_TEXT_CHANGE': `${MODULE_NAME}/SEARCH_TEXT_CHANGE`,\r\n  'SEARCH_TEXT_SET': `${MODULE_NAME}/SEARCH_TEXT_SET`,\r\n  'USERS_FETCHING_STARTED': `${MODULE_NAME}/USERS_FETCHING_STARTED`,\r\n  'USERS_FETCHING_ERROR': `${MODULE_NAME}/USERS_FETCHING_ERROR`,\r\n  'USERS_FETCHING_SUCCESS': `${MODULE_NAME}/USERS_FETCHING_SUCCESS`,\r\n  'USERS_SHOW_MORE': `${MODULE_NAME}/USERS_SHOW_MORE`,\r\n};\r\n\r\nconst CONSTANTS = {\r\n  SEARCH_DELAY_MS: 500,\r\n  USERS_PER_TICK: 50,\r\n  USERS_MAX_COUNT: 1000\r\n};\r\n\r\nexport { ACTION_TYPES, CONSTANTS };\r\n","/**\r\n * The API URL address.\r\n * @constant\r\n *\r\n * @type {string}\r\n */\r\nexport const API_URL = 'https://randomuser.me/api/';\r\n\r\n/**\r\n * Default keys, which should be taken from api result's user entity.\r\n * @constant\r\n *\r\n * @type {array<string>}\r\n */\r\nexport const API_PICK_ONLY_KEYS = [\r\n  'name',\r\n  'location',\r\n  'email',\r\n  'login',\r\n  'phone',\r\n  'cell',\r\n  'id',\r\n  'picture',\r\n  'nat'\r\n];\r\n\r\n/**\r\n * Default count of users to fetch.\r\n * @constant\r\n *\r\n * @type {number}\r\n */\r\nexport const DEFAULT_USERS_COUNT = 1;\r\n\r\n/**\r\n * Language code mappings.\r\n * @constant\r\n *\r\n * @type {object}\r\n */\r\nexport const LANGUAGE_CODES = {\r\n  british: 'GB',\r\n  french: 'FR',\r\n  polish: 'PL',\r\n  spanish: 'ES',\r\n  swiss: 'CH'\r\n};\r\n\r\n/**\r\n * Default seed string used to make api results consistent\r\n * @constant\r\n *\r\n * @type {string}\r\n */\r\nexport const SEED_STRING = 's3c0nDD';","import axios from 'axios';\r\n\r\nimport {\r\n  API_URL,\r\n  API_PICK_ONLY_KEYS,\r\n  DEFAULT_USERS_COUNT,\r\n  LANGUAGE_CODES,\r\n  SEED_STRING\r\n} from './api.config';\r\n\r\n/**\r\n * Call API endpoint to get users.\r\n * @async\r\n *\r\n * @param {array} [nationalities=[]] list of nationalities of fetched users\r\n * @param {number} [page] page to be fetched when used with seed\r\n * @param {string} [seed=CONFIG.SEED_STRING]\r\n * @param {array<string>} [takeKeys=CONFIG.API_PICK_ONLY_KEYS] list of keys to take from user entity\r\n * @param {number} [usersCount=CONFIG.DEFAULT_USERS_COUNT] users count to fetch\r\n *\r\n * @returns {Promise<Array>} promise of fetched users\r\n */\r\nexport const getUsers = ({\r\n  nationalities = [],\r\n  page,\r\n  seed = SEED_STRING,\r\n  takeKeys = API_PICK_ONLY_KEYS,\r\n  usersCount = DEFAULT_USERS_COUNT,\r\n} = {}) => {\r\n  const nationalitiesCodes = nationalities.map((name) => {\r\n    const mapping = LANGUAGE_CODES[name];\r\n    !mapping && console.warn('No API mapping for nationality:', name);\r\n    return mapping;\r\n  });\r\n\r\n  const nationsQueryParam = nationalitiesCodes?.filter(Boolean).join(',');\r\n\r\n  return axios.get(API_URL, {\r\n    params: {\r\n      ...(takeKeys && { inc: takeKeys.join(',') }),\r\n      ...(usersCount && { results: usersCount }),\r\n      ...(nationsQueryParam && { nat: nationsQueryParam }),\r\n      ...(seed && { seed, page })\r\n    }\r\n  })\r\n    .then(response => {\r\n      return response.data?.results\r\n    })\r\n    .catch(error => {\r\n      return Promise.reject(error);\r\n    })\r\n};","export const selectError = state => state.app.error;\r\n\r\nexport const selectLoading = state => state.app.loading;\r\n\r\nexport const selectModalUser = state => state.app.modalUser;\r\n\r\nexport const selectNationalities = state => state.app.nationalities;\r\n\r\nexport const selectPage = state => state.app.usersPage;\r\n\r\nexport const selectSearchProcessing = state => state.app.search.processing;\r\n\r\nexport const selectSearchString = state => state.app.search.searchString;\r\n\r\nexport const selectSearchUsers = state => state.app.search.users;\r\n\r\nexport const selectUsers = state => state.app.users;\r\n\r\nexport const selectUsersCache = state => state.app.usersCache;\r\n","import {\r\n  all,\r\n  call,\r\n  cancel,\r\n  delay,\r\n  fork,\r\n  put,\r\n  race,\r\n  select,\r\n  take,\r\n  takeEvery\r\n} from 'redux-saga/effects';\r\n\r\nimport { ACTION_TYPES, CONSTANTS } from './constants';\r\nimport { getUsers } from '../../services/api.service';\r\nimport {\r\n  selectNationalities,\r\n  selectPage,\r\n  selectSearchString,\r\n  selectUsers,\r\n  selectUsersCache\r\n} from './selectors'\r\n\r\nexport function* toggleNationalityFlow({ payload }) {\r\n  const nationalities = yield select(selectNationalities);\r\n  const isClickedCurrentlyOff = !nationalities[payload];\r\n  const selectedCount = Object.values(nationalities).filter(Boolean).length;\r\n\r\n  if (isClickedCurrentlyOff || selectedCount > 1) {\r\n    yield put({\r\n      type: ACTION_TYPES.NATIONALITY_SET,\r\n      payload: payload\r\n    });\r\n  }\r\n}\r\n\r\nexport function* watchNationalityClick() {\r\n  yield takeEvery(ACTION_TYPES.NATIONALITY_TOGGLE, toggleNationalityFlow);\r\n}\r\n\r\nexport function* searchTextChangeFlow(payload) {\r\n  yield put({\r\n    type: ACTION_TYPES.SEARCH_TEXT_SET,\r\n    payload\r\n  });\r\n  yield put({\r\n    type: ACTION_TYPES.SEARCH_TEXT_APPLY_STARTED,\r\n  });\r\n  if (!!payload?.length)  {\r\n    yield delay(CONSTANTS.SEARCH_DELAY_MS);\r\n  }\r\n\r\n  const usersState = yield select(selectUsers);\r\n  const searchString = yield select(selectSearchString);\r\n\r\n  const usersVisible = usersState.filter((user) => {\r\n    const fullName = `${user?.name.first} ${user?.name.last}`?.toLowerCase();\r\n    const testString = searchString?.toLowerCase();\r\n    return fullName?.includes(testString)\r\n  });\r\n\r\n  const searchedUsers = !!searchString?.length ? usersVisible : [];\r\n\r\n  yield put({\r\n    type: ACTION_TYPES.SEARCH_TEXT_APPLY_SUCCESS,\r\n    payload: searchedUsers\r\n  });\r\n}\r\n\r\nexport function* watchSearchTextChange() {\r\n  let task;\r\n  while (true) {\r\n    const { payload } = yield take(ACTION_TYPES.SEARCH_TEXT_CHANGE);\r\n    if (task) {\r\n      yield cancel(task);\r\n    }\r\n    task = yield fork(searchTextChangeFlow, payload);\r\n  }\r\n}\r\n\r\nexport function* fetchUsers() {\r\n  yield put({\r\n    type: ACTION_TYPES.USERS_FETCHING_STARTED\r\n  });\r\n\r\n  const page = yield select(selectPage);\r\n  const nationalities = yield select(selectNationalities);\r\n  const selectedNationalities = Object.keys(nationalities)\r\n    .filter((name) => nationalities[name]);\r\n\r\n  try {\r\n    const cache = yield call(getUsers ,{\r\n      usersCount: CONSTANTS.USERS_PER_TICK,\r\n      nationalities: selectedNationalities,\r\n      page\r\n    });\r\n\r\n    yield put({\r\n      type: ACTION_TYPES.USERS_FETCHING_SUCCESS,\r\n      payload: cache\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTION_TYPES.USERS_FETCHING_ERROR,\r\n      payload: error\r\n    });\r\n  }\r\n}\r\n\r\nexport function* bottomReachedFlow() {\r\n  const usersState = yield select(selectUsers);\r\n  const cacheState = yield select(selectUsersCache);\r\n  const shouldSaveCache = (usersState?.length + cacheState?.length) < CONSTANTS.USERS_MAX_COUNT;\r\n\r\n  const allEffects = [\r\n    ...(shouldSaveCache ? [fork(fetchUsers)] : []),\r\n    put({\r\n      type: ACTION_TYPES.USERS_SHOW_MORE\r\n    }),\r\n    ...(!shouldSaveCache ? [put({\r\n        type: ACTION_TYPES.USERS_FETCHING_SUCCESS,\r\n        payload: []\r\n      })] : [])\r\n  ];\r\n\r\n  yield all(allEffects);\r\n}\r\n\r\nexport function* watchBottomReached() {\r\n  while (true) {\r\n    yield all([\r\n      take(ACTION_TYPES.USERS_FETCHING_SUCCESS),\r\n      take(ACTION_TYPES.BOTTOM_REACHED)\r\n    ]);\r\n    yield fork(bottomReachedFlow);\r\n  }\r\n}\r\n\r\nexport function* watchInitialize() {\r\n  while (true) {\r\n    const [initialize, nationalitySet] = yield race([\r\n      take(ACTION_TYPES.INITIALIZE_REQUEST),\r\n      take(ACTION_TYPES.NATIONALITY_SET)\r\n    ]);\r\n    if (nationalitySet) { return }\r\n    if (initialize) {\r\n      const users = yield select(state => state.app.users);\r\n      const usersCache = yield select(state => state.app.usersCache);\r\n      if (!users.length && !usersCache.length) {\r\n        yield fork(fetchUsers);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    watchInitialize(),\r\n    watchBottomReached(),\r\n    watchNationalityClick(),\r\n    watchSearchTextChange()\r\n  ]);\r\n}","import { ACTION_TYPES, CONSTANTS } from './constants';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  error: null,\r\n  users: [],\r\n  usersPage: 1,\r\n  usersCache: [],\r\n  search: {\r\n    users: [],\r\n    processing: false,\r\n    searchString: ''\r\n  },\r\n  modalUser: null,\r\n  nationalities: {\r\n    swiss: true,\r\n    spanish: true,\r\n    french: true,\r\n    british: true\r\n  }\r\n};\r\n\r\nconst appReducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ACTION_TYPES.USERS_SHOW_MORE:\r\n      return {\r\n        ...state,\r\n        users: [\r\n          ...state.users,\r\n          ...state.usersCache.slice(0, CONSTANTS.USERS_PER_TICK)\r\n        ],\r\n        usersCache: [\r\n          ...state.usersCache.slice(CONSTANTS.USERS_PER_TICK)\r\n        ]\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_STARTED:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: initialState.error\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        usersCache: payload,\r\n        usersPage: state.usersPage + 1\r\n      };\r\n\r\n    case ACTION_TYPES.USERS_FETCHING_ERROR:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          error: payload\r\n        };\r\n\r\n\r\n    case ACTION_TYPES.MODAL_OPENED:\r\n      return {\r\n        ...state,\r\n        modalUser: payload\r\n      };\r\n\r\n    case ACTION_TYPES.MODAL_CLOSED:\r\n      return {\r\n        ...state,\r\n        modalUser: null\r\n      };\r\n\r\n    case ACTION_TYPES.SEARCH_TEXT_SET:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          searchString: payload\r\n        }\r\n      };\r\n\r\n    case ACTION_TYPES.SEARCH_TEXT_APPLY_STARTED:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          processing: true\r\n        }\r\n      };\r\n\r\n    case ACTION_TYPES.SEARCH_TEXT_APPLY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          processing: false,\r\n          users: payload\r\n        }\r\n      };\r\n\r\n    case ACTION_TYPES.NATIONALITY_SET:\r\n      return {\r\n        ...state,\r\n        loading: initialState.loading,\r\n        users: initialState.users,\r\n        usersCache: initialState.usersCache,\r\n        usersPage: initialState.usersPage,\r\n        search: initialState.search,\r\n        modalUser: initialState.modalUser,\r\n        nationalities: {\r\n          ...state.nationalities,\r\n          [payload]: !state.nationalities[payload]\r\n        }\r\n      };\r\n\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default appReducer;\r\n","import { ACTION_TYPES } from './constants';\r\n\r\nexport const initializeUsers = () => ({\r\n  type: ACTION_TYPES.INITIALIZE_REQUEST\r\n});\r\n\r\nexport const bottomReached = () => ({\r\n  type: ACTION_TYPES.BOTTOM_REACHED\r\n});\r\n\r\nexport const openModal = (user) => ({\r\n  type: ACTION_TYPES.MODAL_OPENED,\r\n  payload: user\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: ACTION_TYPES.MODAL_CLOSED\r\n});\r\n\r\nexport const searchTextChange = (text) => ({\r\n  type: ACTION_TYPES.SEARCH_TEXT_CHANGE,\r\n  payload: text\r\n});\r\n\r\nexport const toggleNationality = (nationalityName) => ({\r\n  type: ACTION_TYPES.NATIONALITY_TOGGLE,\r\n  payload: nationalityName\r\n});\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  searchTextChange,\r\n  selectLoading,\r\n  selectSearchProcessing,\r\n  selectSearchString,\r\n  selectSearchUsers\r\n} from '../store/module';\r\n\r\nconst useSearchContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const disabled = useSelector(selectLoading);\r\n  const processing = useSelector(selectSearchProcessing);\r\n  const searchText = useSelector(selectSearchString);\r\n  const foundUsers = useSelector(selectSearchUsers);\r\n  const showResults = (!!foundUsers?.length || !!searchText.length);\r\n\r\n  const doSetSearchText = (text) => {\r\n    dispatch(searchTextChange(text))\r\n  };\r\n\r\n  return { foundUsers, disabled, processing, searchText, showResults, doSetSearchText }\r\n};\r\n\r\nexport default useSearchContainer;"],"sourceRoot":""}